version: '3.5'
services:
  
  # --------------------------
  # Separate application for every dataset:
  # --------------------------

  # http://networkrepository.com/fb-pages-company.php
  # Average degree: ~8.
  graphdb-task-communities:
    container_name: graphdb-task-communities
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/communities/:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/communities/:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-communities/all.edges'
      COUNT_NODES: '14092'
      COUNT_EDGES: '52309'
      SAMPLE_FROM_REAL_DATA: '1'
    
  # Patent Citation Network. 77 Mb.
  # Average degree: 8.
  # http://networkrepository.com/cit-patent.php
  graphdb-task-patent-citations:
    container_name: graphdb-task-patent-citations
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/patent-citations:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/patent-citations:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-patent-citations/all.edges'
      SAMPLE_FROM_REAL_DATA: '1'

  # Mouse gene regulatory network derived 
  # from analyzing gene expression profiles. 162 Mb.
  # Third column is the edge weights.
  # Average degree: 670.
  # http://networkrepository.com/bio-mouse-gene.php
  graphdb-task-mouse-gene:
    container_name: graphdb-task-mouse-gene
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/mouse-gene:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/mouse-gene:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-mouse-gene/all.edges'
      COUNT_NODES: '45101'
      COUNT_EDGES: '14506196'
      SAMPLE_FROM_REAL_DATA: '1'

  # Human Brain Network. 227 Mb.
  # Average degree: 186.
  # http://networkrepository.com/bn-human-Jung2015-M87102575.php
  graphdb-task-human-brain:
    container_name: graphdb-task-human-brain
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/human-brain:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/human-brain:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-human-brain/all.edges'
      SAMPLE_FROM_REAL_DATA: '1'

  # Orkut Communities.
  # http://networkrepository.com/orkut.php
  # Average degree: 320.
  # Which means: 2560 bytes for each memberships list.
  graphdb-task-orkut:
    container_name: graphdb-task-orkut
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/orkut/:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/orkut/:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-friendster/all.edges'
      COUNT_NODES: '2783196'
      COUNT_EDGES: '444222386'

  # Sina Weibo social network.
  # http://networkrepository.com/soc-sinaweibo.php
  # Average degree: ~9.
  graphdb-task-sinaweibo:
    container_name: graphdb-task-sinaweibo
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/sinaweibo:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/sinaweibo:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-sinaweibo/all.mtx'
      COUNT_NODES: '58655849'
      COUNT_EDGES: '261321071'

  # Twitter social network.
  # http://networkrepository.com/soc-twitter.php
  # Average degree: 170.
  graphdb-task-twitter:
    container_name: graphdb-task-twitter
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/twitter:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/twitter:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-twitter/all.edges'
      COUNT_NODES: '16751863'
      COUNT_EDGES: '1468365182'

  # Friendster social network.
  # http://networkrepository.com/soc-friendster.php
  # Average degree: 55.
  graphdb-task-friendster:
    container_name: graphdb-task-friendster
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/friendster:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/friendster:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-friendster/all.mtx'
      COUNT_NODES: '65608366'
      COUNT_EDGES: '1806067135'

  # Amazon ratings recommendations graph. 160 Mb.
  # http://networkrepository.com/rec-amazon-ratings.php
  # Average degree: 5.

  # Movielens movies recommendations graph. 130 Mb.
  # http://networkrepository.com/rec-movielens.php
  # Average degree 285.

  # Eachmovie recommendations graph. 130 Mb.
  # http://networkrepository.com/rec-eachmovie.php
  # Average degree 90.


  # --------------------------
  # The infrastructure required for all of that to work:
  # --------------------------

  # https://hub.docker.com/_/mongo
  graphdb-store-mongo:
    container_name: graphdb-store-mongo
    image: 'mongo'
    volumes:
      - '~/benchmarks/mongo:/data/db'
    ports:
      - '27017:27017'
    environment: 
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'temptemp'

  graphdb-store-postgres:
    container_name: graphdb-store-postgres
    image: 'postgres'
    volumes:
      - '~/benchmarks/postgres:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    environment: 
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'temptemp'

  # https://hub.docker.com/_/mysql
  graphdb-store-mysql:
    container_name: graphdb-store-mysql
    image: 'mysql'
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - '~/benchmarks/mysql:/var/lib/mysql'
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: 'temptemp'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'temptemp'

  # https://hub.docker.com/_/arangodb
  graphdb-store-arangodb:
    container_name: graphdb-store-arangodb
    image: 'arangodb'
    volumes:
      - '~/benchmarks/arangodb:/var/lib/arangodb3'
    ports:
      - '8529:8529'
    environment:
      ARANGO_STORAGE_ENGINE: 'mmfiles' # 'rocksdb'
      ARANGO_ROOT_PASSWORD: 'temptemp'

  graphdb-store-neo4j:
    container_name: graphdb-store-neo4j
    image: 'neo4j'
    volumes:
      - '~/benchmarks/neo4j:/data'
    ports:
      - '7474:7474' # http
      - '7687:7687' # bolt
    environment:
      NEO4J_AUTH: 'none'
