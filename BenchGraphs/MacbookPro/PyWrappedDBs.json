[
    {
        "dataset": "PatentCitations",
        "database": "Parsing in Python",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 59.68628668785095,
        "count_iterations": 1,
        "count_operations": 16518947,
        "msecs_per_operation": 0.003613201657941693,
        "operations_per_second": 276762.85318923026,
        "benchmark_code": "            func=lambda: g.add_edges_stream(yield_edges_from_csv(p)),\n",
        "date": "2020/24/05-17:09:05",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599312245.921048,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/24/05",
        "bytes_sent": 98304,
        "bytes_sent_per_second": 1647.0114904971902,
        "bytes_recv": 232448,
        "bytes_recv_per_second": 3894.495920238148,
        "packets_sent": 286,
        "packets_sent_per_second": 4.791720441509973,
        "packets_recv": 454,
        "packets_recv_per_second": 7.6064373442151325,
        "read_bytes": 670359552,
        "read_bytes_per_second": 11231383.106572965,
        "write_bytes": 281206784,
        "write_bytes_per_second": 4711413.619524754,
        "read_requests": 3593,
        "read_requests_per_second": 60.19808232987879,
        "write_requests": 1767,
        "write_requests_per_second": 29.60479028023819
    },
    {
        "dataset": "MouseGenes",
        "database": "Parsing in Python",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 53.83746790885925,
        "count_iterations": 1,
        "count_operations": 14506196,
        "msecs_per_operation": 0.0037113429260751236,
        "operations_per_second": 269444.24697976786,
        "benchmark_code": "            func=lambda: g.add_edges_stream(yield_edges_from_csv(p)),\n",
        "date": "2020/00/05-07:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599274822.984447,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/00/05",
        "bytes_sent": 73728,
        "bytes_sent_per_second": 1369.4551928930455,
        "bytes_recv": 67584,
        "bytes_recv_per_second": 1255.333926818625,
        "packets_sent": 204,
        "packets_sent_per_second": 3.7891826626272422,
        "packets_recv": 344,
        "packets_recv_per_second": 6.389602136979271,
        "read_bytes": 397824000,
        "read_bytes_per_second": 7389351.978318725,
        "write_bytes": 5287936,
        "write_bytes_per_second": 98220.36966805121,
        "read_requests": 3241,
        "read_requests_per_second": 60.19971083124947,
        "write_requests": 857,
        "write_requests_per_second": 15.918282067997776
    },
    {
        "dataset": "HumanBrain",
        "database": "Parsing in Python",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 359.1923599243164,
        "count_iterations": 1,
        "count_operations": 87273967,
        "msecs_per_operation": 0.00411568732660355,
        "operations_per_second": 242972.78210034606,
        "benchmark_code": "            func=lambda: g.add_edges_stream(yield_edges_from_csv(p)),\n",
        "date": "2020/07/05-07:09:12",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599275232.111062,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/07/05",
        "bytes_sent": 746496,
        "bytes_sent_per_second": 2078.2624668222074,
        "bytes_recv": 886784,
        "bytes_recv_per_second": 2468.827566897163,
        "packets_sent": 3063,
        "packets_sent_per_second": 8.527464227372178,
        "packets_recv": 3201,
        "packets_recv_per_second": 8.911659481494725,
        "read_bytes": 5245349888,
        "read_bytes_per_second": 14603177.77667994,
        "write_bytes": 771608576,
        "write_bytes_per_second": 2148176.470575771,
        "read_requests": 45463,
        "read_requests_per_second": 126.57006404473435,
        "write_requests": 10198,
        "write_requests_per_second": 28.39147247494008
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 501.8277533054352,
        "count_iterations": 1,
        "count_operations": 16518947,
        "msecs_per_operation": 0.030378919025857713,
        "operations_per_second": 32917.56362854212,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/02/03-06:09:11",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599098531.115261,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/02/03",
        "bytes_sent": 2533691392,
        "bytes_sent_per_second": 5048926.400166394,
        "bytes_recv": 2533269504,
        "bytes_recv_per_second": 5048085.697361057,
        "packets_sent": 231367,
        "packets_sent_per_second": 461.0486336716804,
        "packets_recv": 230351,
        "packets_recv_per_second": 459.0240346069459,
        "read_bytes": 2514378752,
        "read_bytes_per_second": 5010441.800873525,
        "write_bytes": 6339993600,
        "write_bytes_per_second": 12633804.245061735,
        "read_requests": 36672,
        "read_requests_per_second": 73.07686702947207,
        "write_requests": 116295,
        "write_requests_per_second": 231.7428624343492
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 2798.5478250980377,
        "count_iterations": 1,
        "count_operations": 16518947,
        "msecs_per_operation": 0.16941442000498202,
        "operations_per_second": 5902.685261210898,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/44/03-04:09:53",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599093893.02456,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/44/03",
        "bytes_sent": 7485451264,
        "bytes_sent_per_second": 2674762.674008536,
        "bytes_recv": 7483268096,
        "bytes_recv_per_second": 2673982.5665612305,
        "packets_sent": 81241405,
        "packets_sent_per_second": 29029.84336069153,
        "packets_recv": 81229384,
        "packets_recv_per_second": 29025.547918643984,
        "read_bytes": 24577941504,
        "read_bytes_per_second": 8782391.097118018,
        "write_bytes": 62886260736,
        "write_bytes_per_second": 22471033.073660977,
        "read_requests": 272197,
        "read_requests_per_second": 97.26365851563195,
        "write_requests": 1318973,
        "write_requests_per_second": 471.3062210947902
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 1389.3313291072845,
        "count_iterations": 1,
        "count_operations": 16518947,
        "msecs_per_operation": 0.08410532033956429,
        "operations_per_second": 11889.854244209879,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/58/03-03:09:09",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599091089.469037,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/58/03",
        "bytes_sent": 858382336,
        "bytes_sent_per_second": 617838.465178464,
        "bytes_recv": 947913728,
        "bytes_recv_per_second": 682280.5389475254,
        "packets_sent": 274634,
        "packets_sent_per_second": 197.67350972821308,
        "packets_recv": 261701,
        "packets_recv_per_second": 188.3647151095024,
        "read_bytes": 13161598976,
        "read_bytes_per_second": 9473333.466435967,
        "write_bytes": 135279906816,
        "write_bytes_per_second": 97370514.8525832,
        "read_requests": 135295,
        "read_requests_per_second": 97.3813784843777,
        "write_requests": 15364015,
        "write_requests_per_second": 11058.568016221267
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 342.52584505081177,
        "count_iterations": 1,
        "count_operations": 14506196,
        "msecs_per_operation": 0.023612382257265224,
        "operations_per_second": 42350.66115331557,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/55/03-04:09:51",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599094551.982362,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/55/03",
        "bytes_sent": 548864,
        "bytes_sent_per_second": 1602.401710500354,
        "bytes_recv": 338944,
        "bytes_recv_per_second": 989.5428473425694,
        "packets_sent": 2216,
        "packets_sent_per_second": 6.469584797816553,
        "packets_recv": 1704,
        "packets_recv_per_second": 4.974807082797566,
        "read_bytes": 2799308800,
        "read_bytes_per_second": 8172547.679094809,
        "write_bytes": 8033153024,
        "write_bytes_per_second": 23452691.64377458,
        "read_requests": 197266,
        "read_requests_per_second": 575.9156654901084,
        "write_requests": 57526,
        "write_requests_per_second": 167.9464508480122
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 371.2153079509735,
        "count_iterations": 1,
        "count_operations": 14506196,
        "msecs_per_operation": 0.02559012079741467,
        "operations_per_second": 39077.580286413824,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/08/03-06:09:56",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599098936.221614,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/08/03",
        "bytes_sent": 2057542656,
        "bytes_sent_per_second": 5542720.388760854,
        "bytes_recv": 2057311232,
        "bytes_recv_per_second": 5542096.966194373,
        "packets_sent": 190623,
        "packets_sent_per_second": 513.5106120816969,
        "packets_recv": 189657,
        "packets_recv_per_second": 510.9083487070206,
        "read_bytes": 2894180352,
        "read_bytes_per_second": 7796500.5483616395,
        "write_bytes": 3135168512,
        "write_bytes_per_second": 8445687.569581755,
        "read_requests": 26067,
        "read_requests_per_second": 70.22070329988297,
        "write_requests": 84771,
        "write_requests_per_second": 228.3607334727579
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 2129.4635326862335,
        "count_iterations": 1,
        "count_operations": 14506196,
        "msecs_per_operation": 0.14679682617594808,
        "operations_per_second": 6812.136379579608,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/46/03-05:09:28",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599097588.028852,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/46/03",
        "bytes_sent": 5440587776,
        "bytes_sent_per_second": 2554910.0477606747,
        "bytes_recv": 5441137664,
        "bytes_recv_per_second": 2555168.2761790343,
        "packets_sent": 58235082,
        "packets_sent_per_second": 27347.30184674201,
        "packets_recv": 58230199,
        "packets_recv_per_second": 27345.00878094161,
        "read_bytes": 12668211200,
        "read_bytes_per_second": 5949015.3297058605,
        "write_bytes": 43674300416,
        "write_bytes_per_second": 20509531.976303257,
        "read_requests": 182665,
        "read_requests_per_second": 85.77982069013193,
        "write_requests": 2738036,
        "write_requests_per_second": 1285.7867523779928
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 901.2738580703735,
        "count_iterations": 1,
        "count_operations": 14506196,
        "msecs_per_operation": 0.06213026889133261,
        "operations_per_second": 16095.214423569048,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/10/03-05:09:53",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599095453.559782,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/10/03",
        "bytes_sent": 631756800,
        "bytes_sent_per_second": 700959.8629129116,
        "bytes_recv": 631458816,
        "bytes_recv_per_second": 700629.2375460138,
        "packets_sent": 147483,
        "packets_sent_per_second": 163.63838657848234,
        "packets_recv": 147461,
        "packets_recv_per_second": 163.61397668375056,
        "read_bytes": 4287377408,
        "read_bytes_per_second": 4757019.600212605,
        "write_bytes": 68781469696,
        "write_bytes_per_second": 76315837.94437471,
        "read_requests": 65717,
        "read_requests_per_second": 72.91568418582564,
        "write_requests": 8499319,
        "write_requests_per_second": 9430.34009462677
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 3450.965090036392,
        "count_iterations": 1,
        "count_operations": 87273967,
        "msecs_per_operation": 0.03954174662458499,
        "operations_per_second": 25289.72757562136,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/53/05-08:09:51",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599281631.848956,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/53/05",
        "bytes_sent": 7206912,
        "bytes_sent_per_second": 2088.375805599355,
        "bytes_recv": 8864768,
        "bytes_recv_per_second": 2568.7793903202064,
        "packets_sent": 33006,
        "packets_sent_per_second": 9.564281045697838,
        "packets_recv": 30937,
        "packets_recv_per_second": 8.964738614517179,
        "read_bytes": 77349781504,
        "read_bytes_per_second": 22413956.526921663,
        "write_bytes": 97485946880,
        "write_bytes_per_second": 28248893.95765286,
        "read_requests": 7941694,
        "read_requests_per_second": 2301.2965338099816,
        "write_requests": 3208842,
        "write_requests_per_second": 929.8390207610478
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 2924.4247212409973,
        "count_iterations": 1,
        "count_operations": 87273967,
        "msecs_per_operation": 0.03350855726818282,
        "operations_per_second": 29843.123116181552,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/56/05-07:09:20",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599278180.838597,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/56/05",
        "bytes_sent": 13797075968,
        "bytes_sent_per_second": 4717876.944408105,
        "bytes_recv": 13797357568,
        "bytes_recv_per_second": 4717973.236850839,
        "packets_sent": 1265947,
        "packets_sent_per_second": 432.8875319665564,
        "packets_recv": 1265961,
        "packets_recv_per_second": 432.8923192328855,
        "read_bytes": 23669260288,
        "read_bytes_per_second": 8093646.629397869,
        "write_bytes": 38169812992,
        "write_bytes_per_second": 13052075.751774663,
        "read_requests": 219064,
        "read_requests_per_second": 74.90840793707929,
        "write_requests": 701531,
        "write_requests_per_second": 239.8868382231091
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 13024.72899889946,
        "count_iterations": 1,
        "count_operations": 87273967,
        "msecs_per_operation": 0.14923956646658973,
        "operations_per_second": 6700.635921666725,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/45/05-14:09:42",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599302742.294712,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/45/05",
        "bytes_sent": 35115678720,
        "bytes_sent_per_second": 2696077.4940474494,
        "bytes_recv": 35124001792,
        "bytes_recv_per_second": 2696716.5147902765,
        "packets_sent": 353039127,
        "packets_sent_per_second": 27105.295398455542,
        "packets_recv": 353021817,
        "packets_recv_per_second": 27103.966388078323,
        "read_bytes": 222511337472,
        "read_bytes_per_second": 17083759.477130108,
        "write_bytes": 341980192768,
        "write_bytes_per_second": 26256223.280875634,
        "read_requests": 4657140,
        "read_requests_per_second": 357.5613742438334,
        "write_requests": 18778653,
        "write_requests_per_second": 1441.7691916343692
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 8075.50866985321,
        "count_iterations": 1,
        "count_operations": 87273967,
        "msecs_per_operation": 0.09253055575957961,
        "operations_per_second": 10807.240827541133,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/08/05-11:09:27",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599289707.859271,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/08/05",
        "bytes_sent": 6020349952,
        "bytes_sent_per_second": 745507.2117592603,
        "bytes_recv": 6066176000,
        "bytes_recv_per_second": 751181.9066761358,
        "packets_sent": 1449231,
        "packets_sent_per_second": 179.46002651327012,
        "packets_recv": 1445387,
        "packets_recv_per_second": 178.98401934676804,
        "read_bytes": 93813448704,
        "read_bytes_per_second": 11617032.75166012,
        "write_bytes": 555205394432,
        "write_bytes_per_second": 68751755.10672717,
        "read_requests": 1074648,
        "read_requests_per_second": 133.07496083952987,
        "write_requests": 77560274,
        "write_requests_per_second": 9604.382481755149
    },
    {
        "dataset": "CommunitiesFB",
        "database": "Parsing in Python",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 0.03272891044616699,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.0032728910446166992,
        "operations_per_second": 305540.2658896376,
        "benchmark_code": "            func=lambda: g.add_edges_stream(yield_edges_from_csv(p)),\n",
        "date": "2020/22/05-17:09:55",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599312175.425998,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/22/05",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 0,
        "packets_sent_per_second": 0.0,
        "packets_recv": 1,
        "packets_recv_per_second": 30.554026588963758,
        "read_bytes": 9424896,
        "read_bytes_per_second": 287968522.98221815,
        "write_bytes": 21811200,
        "write_bytes_per_second": 666419984.7372063,
        "read_requests": 44,
        "read_requests_per_second": 1344.3771699144054,
        "write_requests": 85,
        "write_requests_per_second": 2597.0922600619197
    },
    {
        "dataset": "CommunitiesFB",
        "database": "SQLite (In-Memory)",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 0.3459761142730713,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.03459761142730713,
        "operations_per_second": 28903.729441007657,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/06/03-03:09:32",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599087992.825369,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/06/03",
        "bytes_sent": 1024,
        "bytes_sent_per_second": 2959.741894759184,
        "bytes_recv": 1024,
        "bytes_recv_per_second": 2959.741894759184,
        "packets_sent": 4,
        "packets_sent_per_second": 11.561491776403063,
        "packets_recv": 3,
        "packets_recv_per_second": 8.671118832302296,
        "read_bytes": 659456,
        "read_bytes_per_second": 1906073.7802249144,
        "write_bytes": 0,
        "write_bytes_per_second": 0.0,
        "read_requests": 12,
        "read_requests_per_second": 34.684475329209185,
        "write_requests": 0,
        "write_requests_per_second": 0.0
    },
    {
        "dataset": "MovieRatings",
        "database": "Parsing in Python",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 10.067133903503418,
        "count_iterations": 1,
        "count_operations": 2811717,
        "msecs_per_operation": 0.0035804221774465273,
        "operations_per_second": 279296.6724145297,
        "benchmark_code": "            func=lambda: g.add_edges_stream(yield_edges_from_csv(p)),\n",
        "date": "2020/23/05-17:09:05",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599312185.502457,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/23/05",
        "bytes_sent": 16384,
        "bytes_sent_per_second": 1627.4741308743571,
        "bytes_recv": 16384,
        "bytes_recv_per_second": 1627.4741308743571,
        "packets_sent": 131,
        "packets_sent_per_second": 13.012641061068164,
        "packets_recv": 61,
        "packets_recv_per_second": 6.05932141011571,
        "read_bytes": 123641856,
        "read_bytes_per_second": 12281733.528643336,
        "write_bytes": 1117769728,
        "write_bytes_per_second": 111031574.49917398,
        "read_requests": 638,
        "read_requests_per_second": 63.37454196153808,
        "write_requests": 4521,
        "write_requests_per_second": 449.08511631365775
    },
    {
        "dataset": "CommunitiesFB",
        "database": "MongoDB",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 0.37868499755859375,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.037868499755859375,
        "operations_per_second": 26407.172358214968,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/28/03-02:09:17",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599085697.157858,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/28/03",
        "bytes_sent": 1331200,
        "bytes_sent_per_second": 3515322.784325577,
        "bytes_recv": 1331200,
        "bytes_recv_per_second": 3515322.784325577,
        "packets_sent": 148,
        "packets_sent_per_second": 390.82615090158157,
        "packets_recv": 148,
        "packets_recv_per_second": 390.82615090158157,
        "read_bytes": 13344768,
        "read_bytes_per_second": 35239758.865639165,
        "write_bytes": 1388544,
        "write_bytes_per_second": 3666752.0734965247,
        "read_requests": 65,
        "read_requests_per_second": 171.6466203283973,
        "write_requests": 194,
        "write_requests_per_second": 512.2991437493704
    },
    {
        "dataset": "CommunitiesFB",
        "database": "SQLite",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 0.4207620620727539,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.04207620620727539,
        "operations_per_second": 23766.401254756904,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/28/03-02:09:17",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599085697.812218,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/28/03",
        "bytes_sent": 6144,
        "bytes_sent_per_second": 14602.07693092264,
        "bytes_recv": 1024,
        "bytes_recv_per_second": 2433.679488487107,
        "packets_sent": 11,
        "packets_sent_per_second": 26.143041380232592,
        "packets_recv": 9,
        "packets_recv_per_second": 21.38976112928121,
        "read_bytes": 5189632,
        "read_bytes_per_second": 12333887.647652658,
        "write_bytes": 3379200,
        "write_bytes_per_second": 8031142.312007452,
        "read_requests": 32,
        "read_requests_per_second": 76.05248401522209,
        "write_requests": 43,
        "write_requests_per_second": 102.19552539545468
    },
    {
        "dataset": "CommunitiesFB",
        "database": "MySQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 0.8555810451507568,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.08555810451507569,
        "operations_per_second": 11687.963468426255,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/33/03-02:09:58",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599086038.11643,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/33/03",
        "bytes_sent": 651264,
        "bytes_sent_per_second": 761194.9840301157,
        "bytes_recv": 652288,
        "bytes_recv_per_second": 762391.8314892825,
        "packets_sent": 246,
        "packets_sent_per_second": 287.5239013232859,
        "packets_recv": 248,
        "packets_recv_per_second": 289.8614940169711,
        "read_bytes": 8671232,
        "read_bytes_per_second": 10134904.284224873,
        "write_bytes": 39669760,
        "write_bytes_per_second": 46365870.56812371,
        "read_requests": 1253,
        "read_requests_per_second": 1464.5018225938097,
        "write_requests": 4001,
        "write_requests_per_second": 4676.354183717344
    },
    {
        "dataset": "CommunitiesFB",
        "database": "PostgreSQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 2.1302032470703125,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.21302032470703125,
        "operations_per_second": 4694.38773682891,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/34/03-02:09:00",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599086040.802085,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/34/03",
        "bytes_sent": 5995520,
        "bytes_sent_per_second": 2814529.5563912466,
        "bytes_recv": 5996544,
        "bytes_recv_per_second": 2815010.261695498,
        "packets_sent": 66457,
        "packets_sent_per_second": 31197.49258264389,
        "packets_recv": 66468,
        "packets_recv_per_second": 31202.6564091544,
        "read_bytes": 6262784,
        "read_bytes_per_second": 2939993.640800831,
        "write_bytes": 16789504,
        "write_bytes_per_second": 7881644.168503993,
        "read_requests": 85,
        "read_requests_per_second": 39.902295763045736,
        "write_requests": 374,
        "write_requests_per_second": 175.57010135740123
    },
    {
        "dataset": "MovieRatings",
        "database": "MongoDB",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 72.49415612220764,
        "count_iterations": 1,
        "count_operations": 2811717,
        "msecs_per_operation": 0.025782877907772242,
        "operations_per_second": 38785.42975602232,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/53/03-05:09:44",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599098024.142391,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/53/03",
        "bytes_sent": 404142080,
        "bytes_sent_per_second": 5574822.877015273,
        "bytes_recv": 404018176,
        "bytes_recv_per_second": 5573113.718558541,
        "packets_sent": 39083,
        "packets_sent_per_second": 539.1193178953004,
        "packets_recv": 38675,
        "packets_recv_per_second": 533.4912780390641,
        "read_bytes": 700755968,
        "read_bytes_per_second": 9666378.719116265,
        "write_bytes": 455946240,
        "write_bytes_per_second": 6289420.615247727,
        "read_requests": 6378,
        "read_requests_per_second": 87.97950539969362,
        "write_requests": 14918,
        "write_requests_per_second": 205.78210435130597
    },
    {
        "dataset": "MovieRatings",
        "database": "SQLite",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 67.41530895233154,
        "count_iterations": 1,
        "count_operations": 2811717,
        "msecs_per_operation": 0.02397656270255205,
        "operations_per_second": 41707.39619376553,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/36/03-02:09:14",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599086174.50887,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/36/03",
        "bytes_sent": 319488,
        "bytes_sent_per_second": 4739.101621946221,
        "bytes_recv": 280576,
        "bytes_recv_per_second": 4161.903347478412,
        "packets_sent": 2101,
        "packets_sent_per_second": 31.16502813160122,
        "packets_recv": 864,
        "packets_recv_per_second": 12.816080107426679,
        "read_bytes": 619663360,
        "read_bytes_per_second": 9191730.626617104,
        "write_bytes": 2350174208,
        "write_bytes_per_second": 34861135.31960191,
        "read_requests": 6330,
        "read_requests_per_second": 93.89558689816074,
        "write_requests": 10564,
        "write_requests_per_second": 156.70031279497158
    },
    {
        "dataset": "MovieRatings",
        "database": "SQLite (In-Memory)",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 54.68755912780762,
        "count_iterations": 1,
        "count_operations": 2811717,
        "msecs_per_operation": 0.019449880314344442,
        "operations_per_second": 51414.198125553085,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/37/03-02:09:09",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599086229.205586,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/37/03",
        "bytes_sent": 136192,
        "bytes_sent_per_second": 2490.3653074314825,
        "bytes_recv": 60416,
        "bytes_recv_per_second": 1104.7485198380261,
        "packets_sent": 576,
        "packets_sent_per_second": 10.532560040828638,
        "packets_recv": 324,
        "packets_recv_per_second": 5.924565022966109,
        "read_bytes": 255713280,
        "read_bytes_per_second": 4675894.921592405,
        "write_bytes": 1482956800,
        "write_bytes_per_second": 27116895.02422762,
        "read_requests": 3632,
        "read_requests_per_second": 66.41364247966948,
        "write_requests": 6446,
        "write_requests_per_second": 117.86958684580105
    },
    {
        "dataset": "MovieRatings",
        "database": "MySQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 153.2326159477234,
        "count_iterations": 1,
        "count_operations": 2811717,
        "msecs_per_operation": 0.05449788010234437,
        "operations_per_second": 18349.337591151227,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/39/03-02:09:42",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599086382.615667,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/39/03",
        "bytes_sent": 104904704,
        "bytes_sent_per_second": 684610.80137005,
        "bytes_recv": 104636416,
        "bytes_recv_per_second": 682859.9469691075,
        "packets_sent": 25247,
        "packets_sent_per_second": 164.76257253621012,
        "packets_recv": 24807,
        "packets_recv_per_second": 161.89112119878655,
        "read_bytes": 656719872,
        "read_bytes_per_second": 4285770.806288692,
        "write_bytes": 9995792384,
        "write_bytes_per_second": 65232798.658284016,
        "read_requests": 10354,
        "read_requests_per_second": 67.5704707901897,
        "write_requests": 1273917,
        "write_requests_per_second": 8313.61516685591
    },
    {
        "dataset": "MovieRatings",
        "database": "PostgreSQL",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 451.24164509773254,
        "count_iterations": 1,
        "count_operations": 2811717,
        "msecs_per_operation": 0.16048615315756617,
        "operations_per_second": 6231.067168880261,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/47/03-02:09:17",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599086837.492261,
        "date_readable": "Sep 03, 2020",
        "date_sortable": "2020/47/03",
        "bytes_sent": 1054210048,
        "bytes_sent_per_second": 2336242.8079342567,
        "bytes_recv": 1053353984,
        "bytes_recv_per_second": 2334345.6780720195,
        "packets_sent": 11503320,
        "packets_sent_per_second": 25492.59387951337,
        "packets_recv": 11500634,
        "packets_recv_per_second": 25486.641414732734,
        "read_bytes": 1053339648,
        "read_bytes_per_second": 2334313.907954709,
        "write_bytes": 7166586880,
        "write_bytes_per_second": 15881927.029247973,
        "read_requests": 22383,
        "read_requests_per_second": 49.60313446945297,
        "write_requests": 411568,
        "write_requests_per_second": 912.0789370202305
    },
    {
        "dataset": "Wikipedia",
        "database": "Parsing in Python",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 2462.293276309967,
        "count_iterations": 1,
        "count_operations": 591044736,
        "msecs_per_operation": 0.004166001533105553,
        "operations_per_second": 240038.31780987084,
        "benchmark_code": "            def add(self, es, upsert=True) -> int:\n                self.count += len(es)\n                return len(es)\n",
        "date": "2020/26/05-15:09:44",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599305204.619472,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/26/05",
        "bytes_sent": 8768512,
        "bytes_sent_per_second": 3561.116006920441,
        "bytes_recv": 69233664,
        "bytes_recv_per_second": 28117.553934824,
        "packets_sent": 72465,
        "packets_sent_per_second": 29.42988176802287,
        "packets_recv": 64158,
        "packets_recv_per_second": 26.05619753636668,
        "read_bytes": 67074084864,
        "read_bytes_per_second": 27240493.855597217,
        "write_bytes": 39663505408,
        "write_bytes_per_second": 16108359.548233986,
        "read_requests": 473497,
        "read_requests_per_second": 192.29918895347444,
        "write_requests": 199337,
        "write_requests_per_second": 80.95583167035637
    },
    {
        "dataset": "CommunitiesFB",
        "database": "Sampling in Unum",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 0.003698110580444336,
        "count_iterations": 1,
        "count_operations": 52310,
        "msecs_per_operation": 7.069605391788063e-05,
        "operations_per_second": 14145061.068918832,
        "benchmark_code": "            func=lambda: sample(),\n",
        "date": "2020/22/05-17:09:55",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599312175.434412,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/22/05",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 0,
        "packets_sent_per_second": 0.0,
        "packets_recv": 0,
        "packets_recv_per_second": 0.0,
        "read_bytes": 2875392,
        "read_bytes_per_second": 777530021.7373477,
        "write_bytes": 5492736,
        "write_bytes_per_second": 1485281708.1905744,
        "read_requests": 11,
        "read_requests_per_second": 2974.491908967829,
        "write_requests": 21,
        "write_requests_per_second": 5678.575462574947
    },
    {
        "dataset": "MovieRatings",
        "database": "Sampling in Unum",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 0.729860782623291,
        "count_iterations": 1,
        "count_operations": 2811716,
        "msecs_per_operation": 0.00025957841496911175,
        "operations_per_second": 3852400.439840092,
        "benchmark_code": "            func=lambda: sample(),\n",
        "date": "2020/23/05-17:09:06",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599312186.233436,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/23/05",
        "bytes_sent": 1024,
        "bytes_sent_per_second": 1403.0072917735126,
        "bytes_recv": 1024,
        "bytes_recv_per_second": 1403.0072917735126,
        "packets_sent": 2,
        "packets_sent_per_second": 2.740248616745142,
        "packets_recv": 4,
        "packets_recv_per_second": 5.480497233490284,
        "read_bytes": 12476416,
        "read_bytes_per_second": 17094240.84296848,
        "write_bytes": 0,
        "write_bytes_per_second": 0.0,
        "read_requests": 75,
        "read_requests_per_second": 102.75932312794282,
        "write_requests": 0,
        "write_requests_per_second": 0.0
    },
    {
        "dataset": "PatentCitations",
        "database": "Sampling in Unum",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 3.7354650497436523,
        "count_iterations": 1,
        "count_operations": 16518947,
        "msecs_per_operation": 0.00022613215296009198,
        "operations_per_second": 4422192.894331489,
        "benchmark_code": "            func=lambda: sample(),\n",
        "date": "2020/24/05-17:09:09",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599312249.657574,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/24/05",
        "bytes_sent": 4096,
        "bytes_sent_per_second": 1096.5167510484644,
        "bytes_recv": 4096,
        "bytes_recv_per_second": 1096.5167510484644,
        "packets_sent": 18,
        "packets_sent_per_second": 4.818677128630947,
        "packets_recv": 26,
        "packets_recv_per_second": 6.960311408022479,
        "read_bytes": 12009472,
        "read_bytes_per_second": 3214987.1140740975,
        "write_bytes": 8388608,
        "write_bytes_per_second": 2245666.306147255,
        "read_requests": 50,
        "read_requests_per_second": 13.385214246197075,
        "write_requests": 8,
        "write_requests_per_second": 2.141634279391532
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 502.79122591018677,
        "count_iterations": 1,
        "count_operations": 16518947,
        "msecs_per_operation": 0.030437244329810292,
        "operations_per_second": 32854.48541807046,
        "benchmark_code": "        def import_one() -> int:\n            g.add_edges_stream(yield_edges_from_csv(\n                dataset_path), upsert=False)\n            return g.number_of_edges()\n",
        "date": "2020/32/05-17:09:45",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599312765.117563,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/32/05",
        "bytes_sent": 692224,
        "bytes_sent_per_second": 1376.7622908432604,
        "bytes_recv": 745472,
        "bytes_recv_per_second": 1482.6670824465882,
        "packets_sent": 3741,
        "packets_sent_per_second": 7.44046396837532,
        "packets_recv": 3035,
        "packets_recv_per_second": 6.036302631387088,
        "read_bytes": 8135127040,
        "read_bytes_per_second": 16179930.398095634,
        "write_bytes": 16047849472,
        "write_bytes_per_second": 31917520.92123146,
        "read_requests": 488552,
        "read_requests_per_second": 971.6796451958564,
        "write_requests": 165341,
        "write_requests_per_second": 328.8462317549168
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 20.129786729812622,
        "count_iterations": 1,
        "count_operations": 19888,
        "msecs_per_operation": 1.0121574180316082,
        "operations_per_second": 987.9886094642756,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/46/05-17:09:18",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313578.14146,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/46/05",
        "bytes_sent": 29030400,
        "bytes_sent_per_second": 1442161.3298567834,
        "bytes_recv": 29029376,
        "bytes_recv_per_second": 1442110.4599686048,
        "packets_sent": 79952,
        "packets_sent_per_second": 3971.825487926778,
        "packets_recv": 79997,
        "packets_recv_per_second": 3974.0609810596166,
        "read_bytes": 167796736,
        "read_bytes_per_second": 8335743.356460386,
        "write_bytes": 626688,
        "write_bytes_per_second": 31132.371565162306,
        "read_requests": 9198,
        "read_requests_per_second": 456.9347963521926,
        "write_requests": 54,
        "write_requests_per_second": 2.6825917594062187
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 30.938236236572266,
        "count_iterations": 1,
        "count_operations": 19888,
        "msecs_per_operation": 1.5556233023216142,
        "operations_per_second": 642.8291466884037,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/46/05-17:09:49",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313609.081041,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/46/05",
        "bytes_sent": 50957312,
        "bytes_sent_per_second": 1647065.8382187628,
        "bytes_recv": 50953216,
        "bytes_recv_per_second": 1646933.4454097908,
        "packets_sent": 80884,
        "packets_sent_per_second": 2614.3701076400266,
        "packets_recv": 80941,
        "packets_recv_per_second": 2616.212488038319,
        "read_bytes": 305205248,
        "read_bytes_per_second": 9864985.374932755,
        "write_bytes": 2256896,
        "write_bytes_per_second": 72948.43774358767,
        "read_requests": 16577,
        "read_requests_per_second": 535.8094712718055,
        "write_requests": 407,
        "write_requests_per_second": 13.155242493070208
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 25.165497064590454,
        "count_iterations": 1,
        "count_operations": 19888,
        "msecs_per_operation": 1.2653608741246207,
        "operations_per_second": 790.2883836927566,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/47/05-17:09:14",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313634.247906,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/47/05",
        "bytes_sent": 50978816,
        "bytes_sent_per_second": 2025742.4627519327,
        "bytes_recv": 50975744,
        "bytes_recv_per_second": 2025620.3908535666,
        "packets_sent": 80915,
        "packets_sent_per_second": 3215.314992281748,
        "packets_recv": 80950,
        "packets_recv_per_second": 3216.705785394642,
        "read_bytes": 533590016,
        "read_bytes_per_second": 21203237.69605954,
        "write_bytes": 63524864,
        "write_bytes_per_second": 2524284.095678911,
        "read_requests": 18652,
        "read_requests_per_second": 741.1735183345382,
        "write_requests": 677,
        "write_requests_per_second": 26.901912497988548
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 20.444740056991577,
        "count_iterations": 1,
        "count_operations": 19888,
        "msecs_per_operation": 1.0279937679500994,
        "operations_per_second": 972.768543134341,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/47/05-17:09:34",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313654.693933,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/47/05",
        "bytes_sent": 14129152,
        "bytes_sent_per_second": 691089.8334052524,
        "bytes_recv": 14126080,
        "bytes_recv_per_second": 690939.5747083242,
        "packets_sent": 79681,
        "packets_sent_per_second": 3897.38386391228,
        "packets_recv": 79708,
        "packets_recv_per_second": 3898.7044969907506,
        "read_bytes": 149721088,
        "read_bytes_per_second": 7323208.198423595,
        "write_bytes": 5816320,
        "write_bytes_per_second": 284489.79951745423,
        "read_requests": 9285,
        "read_requests_per_second": 454.1510419852351,
        "write_requests": 902,
        "write_requests_per_second": 44.11892728817254
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 13.697942018508911,
        "count_iterations": 1,
        "count_operations": 19888,
        "msecs_per_operation": 0.6887541240199574,
        "operations_per_second": 1451.8969326287825,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/47/05-17:09:48",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313668.393061,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/47/05",
        "bytes_sent": 13278208,
        "bytes_sent_per_second": 969357.8774138656,
        "bytes_recv": 13268992,
        "bytes_recv_per_second": 968685.0756172492,
        "packets_sent": 79667,
        "packets_sent_per_second": 5815.983152239401,
        "packets_recv": 79687,
        "packets_recv_per_second": 5817.443225582752,
        "read_bytes": 67076096,
        "read_bytes_per_second": 4896800.98728448,
        "write_bytes": 1503232,
        "write_bytes_per_second": 109741.44860365194,
        "read_requests": 4607,
        "read_requests_per_second": 336.3278946410298,
        "write_requests": 240,
        "write_requests_per_second": 17.520880120218614
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 39.88422775268555,
        "count_iterations": 1,
        "count_operations": 20000,
        "msecs_per_operation": 1.994211387634277,
        "operations_per_second": 501.45135375357313,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/48/05-17:09:49",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313729.930985,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/48/05",
        "bytes_sent": 148480,
        "bytes_sent_per_second": 3722.774850266527,
        "bytes_recv": 102400,
        "bytes_recv_per_second": 2567.4309312182945,
        "packets_sent": 1033,
        "packets_sent_per_second": 25.899962421372052,
        "packets_recv": 357,
        "packets_recv_per_second": 8.95090666450128,
        "read_bytes": 526667776,
        "read_bytes_per_second": 13204913.462679181,
        "write_bytes": 9969664,
        "write_bytes_per_second": 249965.07546341314,
        "read_requests": 80824,
        "read_requests_per_second": 2026.4652107889399,
        "write_requests": 1464,
        "write_requests_per_second": 36.70623909476156
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 60.002131938934326,
        "count_iterations": 1,
        "count_operations": 14971,
        "msecs_per_operation": 4.007890717983724,
        "operations_per_second": 249.50780107674112,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/49/05-17:09:49",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313789.934519,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/49/05",
        "bytes_sent": 63488,
        "bytes_sent_per_second": 1058.09573674171,
        "bytes_recv": 63488,
        "bytes_recv_per_second": 1058.09573674171,
        "packets_sent": 355,
        "packets_sent_per_second": 5.916456441269327,
        "packets_recv": 304,
        "packets_recv_per_second": 5.0664866426644375,
        "read_bytes": 538013696,
        "read_bytes_per_second": 8966576.330113571,
        "write_bytes": 10366976,
        "write_bytes_per_second": 172776.7941737592,
        "read_requests": 122528,
        "read_requests_per_second": 2042.0607741854876,
        "write_requests": 1507,
        "write_requests_per_second": 25.115774245050353
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 60.00244903564453,
        "count_iterations": 1,
        "count_operations": 14227,
        "msecs_per_operation": 4.217505379605295,
        "operations_per_second": 237.10698860888883,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/50/05-17:09:49",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313849.938383,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/50/05",
        "bytes_sent": 96256,
        "bytes_sent_per_second": 1604.2011875685107,
        "bytes_recv": 90112,
        "bytes_recv_per_second": 1501.8053670854142,
        "packets_sent": 371,
        "packets_sent_per_second": 6.183080956905726,
        "packets_recv": 331,
        "packets_recv_per_second": 5.516441500635566,
        "read_bytes": 551231488,
        "read_bytes_per_second": 9186816.485982768,
        "write_bytes": 9629696,
        "write_bytes_per_second": 160488.38263717314,
        "read_requests": 119267,
        "read_requests_per_second": 1987.7022007743265,
        "write_requests": 1274,
        "write_requests_per_second": 21.232466682204567
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 60.00158619880676,
        "count_iterations": 1,
        "count_operations": 14295,
        "msecs_per_operation": 4.197382735138634,
        "operations_per_second": 238.24370163541246,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/51/05-17:09:49",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313909.941426,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/51/05",
        "bytes_sent": 67584,
        "bytes_sent_per_second": 1126.3702225482837,
        "bytes_recv": 61440,
        "bytes_recv_per_second": 1023.9729295893488,
        "packets_sent": 418,
        "packets_sent_per_second": 6.966482496229619,
        "packets_recv": 296,
        "packets_recv_per_second": 4.9332029159903525,
        "read_bytes": 566185984,
        "read_bytes_per_second": 9436183.60561374,
        "write_bytes": 13262848,
        "write_bytes_per_second": 221041.62306735408,
        "read_requests": 117792,
        "read_requests_per_second": 1963.1481009470797,
        "write_requests": 1800,
        "write_requests_per_second": 29.999206921562955
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 60.0031681060791,
        "count_iterations": 1,
        "count_operations": 16614,
        "msecs_per_operation": 3.6116027510580895,
        "operations_per_second": 276.88537996240876,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/52/05-17:09:49",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599313969.945803,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/52/05",
        "bytes_sent": 82944,
        "bytes_sent_per_second": 1382.3270106899022,
        "bytes_recv": 69632,
        "bytes_recv_per_second": 1160.472058356955,
        "packets_sent": 318,
        "packets_sent_per_second": 5.299720165405441,
        "packets_recv": 307,
        "packets_recv_per_second": 5.116396511885127,
        "read_bytes": 630939648,
        "read_bytes_per_second": 10515105.583834624,
        "write_bytes": 6094848,
        "write_bytes_per_second": 101575.4366373617,
        "read_requests": 133999,
        "read_requests_per_second": 2233.198749824414,
        "write_requests": 1015,
        "write_requests_per_second": 16.91577348391988
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 60.00068497657776,
        "count_iterations": 1,
        "count_operations": 17714,
        "msecs_per_operation": 3.3871900743241365,
        "operations_per_second": 295.22996290650593,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/53/05-17:09:49",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314029.947546,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/53/05",
        "bytes_sent": 57344,
        "bytes_sent_per_second": 955.7224225420953,
        "bytes_recv": 59392,
        "bytes_recv_per_second": 989.855366204313,
        "packets_sent": 325,
        "packets_sent_per_second": 5.4166048292093505,
        "packets_recv": 315,
        "packets_recv_per_second": 5.249940065233678,
        "read_bytes": 457515008,
        "read_bytes_per_second": 7625163.082364783,
        "write_bytes": 5775360,
        "write_bytes_per_second": 96254.9011274539,
        "read_requests": 104897,
        "read_requests_per_second": 1748.2633746756098,
        "write_requests": 1004,
        "write_requests_per_second": 16.7331423031575
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 17.004008769989014,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.7004008769989014,
        "operations_per_second": 588.0966150552309,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/05/05-18:09:38",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314738.327043,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/05/05",
        "bytes_sent": 19316736,
        "bytes_sent_per_second": 1136010.7055515521,
        "bytes_recv": 19309568,
        "bytes_recv_per_second": 1135589.1578978805,
        "packets_sent": 120082,
        "packets_sent_per_second": 7061.981772906224,
        "packets_recv": 120088,
        "packets_recv_per_second": 7062.334630875257,
        "read_bytes": 2992160768,
        "read_bytes_per_second": 175967961.93618602,
        "write_bytes": 174755840,
        "write_bytes_per_second": 10277331.796513353,
        "read_requests": 26239,
        "read_requests_per_second": 1543.1067082434204,
        "write_requests": 1266,
        "write_requests_per_second": 74.45303146599224
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 19.085716009140015,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 1.9141225563273507,
        "operations_per_second": 522.4325875552669,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/05/05-18:09:57",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314757.414147,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/05/05",
        "bytes_sent": 22046720,
        "bytes_sent_per_second": 1155142.410661564,
        "bytes_recv": 22047744,
        "bytes_recv_per_second": 1155196.0633513299,
        "packets_sent": 120005,
        "packets_sent_per_second": 6287.686557975108,
        "packets_recv": 119790,
        "packets_recv_per_second": 6276.421588932446,
        "read_bytes": 3233144832,
        "read_bytes_per_second": 169401285.7810349,
        "write_bytes": 405643264,
        "write_bytes_per_second": 21253761.91313652,
        "read_requests": 30401,
        "read_requests_per_second": 1592.8666226324008,
        "write_requests": 2025,
        "write_requests_per_second": 106.10028982042077
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 24.203619956970215,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 2.4274014599308207,
        "operations_per_second": 411.96316987817056,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/06/05-18:09:21",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314781.619127,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/06/05",
        "bytes_sent": 26593280,
        "bytes_sent_per_second": 1098731.5140164231,
        "bytes_recv": 26591232,
        "bytes_recv_per_second": 1098646.8985744505,
        "packets_sent": 119814,
        "packets_sent_per_second": 4950.251252209721,
        "packets_recv": 119841,
        "packets_recv_per_second": 4951.366787821667,
        "read_bytes": 4104851456,
        "read_bytes_per_second": 169596591.88574705,
        "write_bytes": 371249152,
        "write_bytes_per_second": 15338579.628171975,
        "read_requests": 39514,
        "read_requests_per_second": 1632.5657100156486,
        "write_requests": 1715,
        "write_requests_per_second": 70.85716942544003
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 23.350069046020508,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 2.3417981191475787,
        "operations_per_second": 427.0222918976478,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/06/05-18:09:44",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314804.970378,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/06/05",
        "bytes_sent": 26589184,
        "bytes_sent_per_second": 1138719.7163141377,
        "bytes_recv": 26580992,
        "bytes_recv_per_second": 1138368.8822337822,
        "packets_sent": 119962,
        "packets_sent_per_second": 5137.543694777417,
        "packets_recv": 119814,
        "packets_recv_per_second": 5131.205383755368,
        "read_bytes": 3960414208,
        "read_bytes_per_second": 169610385.31382686,
        "write_bytes": 17289216,
        "write_bytes_per_second": 740435.3265904606,
        "read_requests": 37864,
        "read_requests_per_second": 1621.5797874247855,
        "write_requests": 660,
        "write_requests_per_second": 28.265441044273146
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 22.009735822677612,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 2.2073749696798326,
        "operations_per_second": 453.02679143138255,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/07/05-18:09:06",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314826.981472,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/07/05",
        "bytes_sent": 11494400,
        "bytes_sent_per_second": 522241.61582879187,
        "bytes_recv": 11501568,
        "bytes_recv_per_second": 522567.2898876606,
        "packets_sent": 120077,
        "packets_sent_per_second": 5455.631133758512,
        "packets_recv": 119894,
        "packets_recv_per_second": 5447.316631418532,
        "read_bytes": 3819220992,
        "read_bytes_per_second": 173524163.25074136,
        "write_bytes": 16084992,
        "write_bytes_per_second": 730812.5881014399,
        "read_requests": 37867,
        "read_requests_per_second": 1720.4659022296823,
        "write_requests": 541,
        "write_requests_per_second": 24.580031507810446
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 16.597070693969727,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 1.6645342186310024,
        "operations_per_second": 600.7686647754534,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/07/05-18:09:23",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314843.579817,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/07/05",
        "bytes_sent": 11141120,
        "bytes_sent_per_second": 671270.2624113027,
        "bytes_recv": 11142144,
        "bytes_recv_per_second": 671331.9600457154,
        "packets_sent": 119753,
        "packets_sent_per_second": 7215.3093885121725,
        "packets_recv": 119760,
        "packets_recv_per_second": 7215.731149684916,
        "read_bytes": 2806448128,
        "read_bytes_per_second": 169092979.10140714,
        "write_bytes": 18862080,
        "write_bytes_per_second": 1136470.4258838415,
        "read_requests": 24766,
        "read_requests_per_second": 1492.1910291674735,
        "write_requests": 224,
        "write_requests_per_second": 13.496357527800777
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 17.15548300743103,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.7155483007431032,
        "operations_per_second": 582.904019412827,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/07/05-18:09:40",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314860.736589,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/07/05",
        "bytes_sent": 9638912,
        "bytes_sent_per_second": 561856.054756653,
        "bytes_recv": 9633792,
        "bytes_recv_per_second": 561557.6078987137,
        "packets_sent": 120183,
        "packets_sent_per_second": 7005.515376509178,
        "packets_recv": 120074,
        "packets_recv_per_second": 6999.161722697579,
        "read_bytes": 2871177216,
        "read_bytes_per_second": 167362073.96529305,
        "write_bytes": 2333458432,
        "write_bytes_per_second": 136018229.91455528,
        "read_requests": 40498,
        "read_requests_per_second": 2360.6446978180666,
        "write_requests": 136379,
        "write_requests_per_second": 7949.586726350192
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 33.88966488838196,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 3.3889664888381956,
        "operations_per_second": 295.0752104789386,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/08/05-18:09:14",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314894.627792,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/08/05",
        "bytes_sent": 22898688,
        "bytes_sent_per_second": 675683.5181291545,
        "bytes_recv": 22891520,
        "bytes_recv_per_second": 675472.0082182832,
        "packets_sent": 160259,
        "packets_sent_per_second": 4728.845815614422,
        "packets_recv": 160249,
        "packets_recv_per_second": 4728.550740403943,
        "read_bytes": 1429528576,
        "read_bytes_per_second": 42181844.54488573,
        "write_bytes": 4843307008,
        "write_bytes_per_second": 142913983.47997183,
        "read_requests": 32474,
        "read_requests_per_second": 958.227238509305,
        "write_requests": 163850,
        "write_requests_per_second": 4834.807323697408
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 17.31362795829773,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.7313627958297728,
        "operations_per_second": 577.5796975703986,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/08/05-18:09:31",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314911.94288,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/08/05",
        "bytes_sent": 9635840,
        "bytes_sent_per_second": 556546.5553036749,
        "bytes_recv": 9636864,
        "bytes_recv_per_second": 556605.6994647061,
        "packets_sent": 120071,
        "packets_sent_per_second": 6935.057186697532,
        "packets_recv": 120086,
        "packets_recv_per_second": 6935.923556243888,
        "read_bytes": 432369664,
        "read_bytes_per_second": 24972793.977173485,
        "write_bytes": 3807318016,
        "write_bytes_per_second": 219902958.82356098,
        "read_requests": 23937,
        "read_requests_per_second": 1382.5525220742632,
        "write_requests": 188727,
        "write_requests_per_second": 10900.488358336861
    },
    {
        "dataset": "PatentCitations",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 4.406773090362549,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.44067730903625485,
        "operations_per_second": 2269.234152734034,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/08/05-18:09:36",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314916.351544,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/08/05",
        "bytes_sent": 744448,
        "bytes_sent_per_second": 168932.68265345463,
        "bytes_recv": 742400,
        "bytes_recv_per_second": 168467.9434989747,
        "packets_sent": 1613,
        "packets_sent_per_second": 366.02746883599974,
        "packets_recv": 1619,
        "packets_recv_per_second": 367.3890093276401,
        "read_bytes": 9334784,
        "read_bytes_per_second": 2118281.066119522,
        "write_bytes": 1695473664,
        "write_bytes_per_second": 384742674.34099084,
        "read_requests": 227,
        "read_requests_per_second": 51.511615267062574,
        "write_requests": 61946,
        "write_requests_per_second": 14056.997882526248
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 18.833189010620117,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.8833189010620117,
        "operations_per_second": 530.9775202893655,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/09/05-18:09:13",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314953.096948,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/09/05",
        "bytes_sent": 14695424,
        "bytes_sent_per_second": 780293.979512083,
        "bytes_recv": 14698496,
        "bytes_recv_per_second": 780457.0958063159,
        "packets_sent": 120328,
        "packets_sent_per_second": 6389.146306137878,
        "packets_recv": 120319,
        "packets_recv_per_second": 6388.668426369618,
        "read_bytes": 521797632,
        "read_bytes_per_second": 27706281.27322229,
        "write_bytes": 89731072,
        "write_bytes_per_second": 4764518.210346652,
        "read_requests": 21806,
        "read_requests_per_second": 1157.8495807429906,
        "write_requests": 2476,
        "write_requests_per_second": 131.47003402364692
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 32.82566785812378,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 3.2921139161692685,
        "operations_per_second": 303.75619600782477,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/09/05-18:09:45",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599314985.925811,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/09/05",
        "bytes_sent": 19548160,
        "bytes_sent_per_second": 595514.4640008344,
        "bytes_recv": 19507200,
        "bytes_recv_per_second": 594266.659990356,
        "packets_sent": 120491,
        "packets_sent_per_second": 3670.6336188124374,
        "packets_recv": 120147,
        "packets_recv_per_second": 3660.154014818185,
        "read_bytes": 842022912,
        "read_bytes_per_second": 25651356.60420734,
        "write_bytes": 26099712,
        "write_bytes_per_second": 795100.7154768605,
        "read_requests": 85220,
        "read_requests_per_second": 2596.1391057854603,
        "write_requests": 639,
        "write_requests_per_second": 19.466473698626018
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 35.52678179740906,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 3.563010911383919,
        "operations_per_second": 280.6615036751563,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/10/05-18:09:21",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315021.454088,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/10/05",
        "bytes_sent": 26850304,
        "bytes_sent_per_second": 755776.4210986927,
        "bytes_recv": 26856448,
        "bytes_recv_per_second": 755949.3610524165,
        "packets_sent": 120231,
        "packets_sent_per_second": 3384.235608100263,
        "packets_recv": 120271,
        "packets_recv_per_second": 3385.3615192573193,
        "read_bytes": 795779072,
        "read_bytes_per_second": 22399413.3929135,
        "write_bytes": 24412160,
        "write_bytes_per_second": 687148.0827959587,
        "read_requests": 90564,
        "read_requests_per_second": 2549.175450690689,
        "write_requests": 475,
        "write_requests_per_second": 13.370194990041046
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 31.885578870773315,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 3.197831598713601,
        "operations_per_second": 312.711901527983,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/10/05-18:09:53",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315053.34139,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/10/05",
        "bytes_sent": 26862592,
        "bytes_sent_per_second": 842468.3807331645,
        "bytes_recv": 26853376,
        "bytes_recv_per_second": 842179.3472476082,
        "packets_sent": 120378,
        "packets_sent_per_second": 3775.311732237041,
        "packets_recv": 120259,
        "packets_recv_per_second": 3771.5796375342197,
        "read_bytes": 838230016,
        "read_bytes_per_second": 26288687.41562447,
        "write_bytes": 32456704,
        "write_bytes_per_second": 1017911.7064658401,
        "read_requests": 87815,
        "read_requests_per_second": 2754.0663556995114,
        "write_requests": 438,
        "write_requests_per_second": 13.736617477610727
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 29.87130069732666,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 2.995817941763781,
        "operations_per_second": 333.79865513832,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/11/05-18:09:23",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315083.213897,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/11/05",
        "bytes_sent": 9938944,
        "bytes_sent_per_second": 332725.51807191607,
        "bytes_recv": 9934848,
        "bytes_recv_per_second": 332588.39649018436,
        "packets_sent": 119916,
        "packets_sent_per_second": 4014.4217761073896,
        "packets_recv": 119947,
        "packets_recv_per_second": 4015.4595615160033,
        "read_bytes": 784072704,
        "read_bytes_per_second": 26248361.66140468,
        "write_bytes": 29786112,
        "write_bytes_per_second": 997148.1423527605,
        "read_requests": 86936,
        "read_requests_per_second": 2910.352009136996,
        "write_requests": 864,
        "write_requests_per_second": 28.924083646525773
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 25.930495262145996,
        "count_iterations": 1,
        "count_operations": 9971,
        "msecs_per_operation": 2.600591240812957,
        "operations_per_second": 384.52794284095,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/11/05-18:09:49",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315109.145703,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/11/05",
        "bytes_sent": 9624576,
        "bytes_sent_per_second": 371168.2288633416,
        "bytes_recv": 9615360,
        "bytes_recv_per_second": 370812.8172174463,
        "packets_sent": 119897,
        "packets_sent_per_second": 4623.783648861838,
        "packets_recv": 119920,
        "packets_recv_per_second": 4624.670635391307,
        "read_bytes": 636915712,
        "read_bytes_per_second": 24562419.86745953,
        "write_bytes": 39038976,
        "write_bytes_per_second": 1505523.7320125583,
        "read_requests": 72146,
        "read_requests_per_second": 2782.283919787702,
        "write_requests": 1919,
        "write_requests_per_second": 74.00552826314141
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 11.829405307769775,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.1829405307769774,
        "operations_per_second": 845.351033279062,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/12/05-18:09:00",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315120.976367,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/12/05",
        "bytes_sent": 8123392,
        "bytes_sent_per_second": 686711.7820930866,
        "bytes_recv": 8120320,
        "bytes_recv_per_second": 686452.0902556633,
        "packets_sent": 120115,
        "packets_sent_per_second": 10153.933936231453,
        "packets_recv": 120135,
        "packets_recv_per_second": 10155.624638298012,
        "read_bytes": 152662016,
        "read_bytes_per_second": 12905299.29680647,
        "write_bytes": 177770496,
        "write_bytes_per_second": 15027847.248013135,
        "read_requests": 16283,
        "read_requests_per_second": 1376.4850874882966,
        "write_requests": 10349,
        "write_requests_per_second": 874.8537843405013
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 25.07697319984436,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.507697319984436,
        "operations_per_second": 398.7722090823172,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/12/05-18:09:26",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315146.054513,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/12/05",
        "bytes_sent": 17556480,
        "bytes_sent_per_second": 700103.631330952,
        "bytes_recv": 17548288,
        "bytes_recv_per_second": 699776.9571372718,
        "packets_sent": 160609,
        "packets_sent_per_second": 6404.640572850188,
        "packets_recv": 160454,
        "packets_recv_per_second": 6398.459603609413,
        "read_bytes": 394665984,
        "read_bytes_per_second": 15738182.628932646,
        "write_bytes": 639963136,
        "write_bytes_per_second": 25519951.34739674,
        "read_requests": 34470,
        "read_requests_per_second": 1374.5678047067474,
        "write_requests": 39625,
        "write_requests_per_second": 1580.1348784886818
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 8.4142427444458,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.84142427444458,
        "operations_per_second": 1188.4610776888924,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/12/05-18:09:34",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315154.470046,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/12/05",
        "bytes_sent": 8138752,
        "bytes_sent_per_second": 967258.9972962629,
        "bytes_recv": 8118272,
        "bytes_recv_per_second": 964825.0290091559,
        "packets_sent": 120129,
        "packets_sent_per_second": 14276.864080168896,
        "packets_recv": 120135,
        "packets_recv_per_second": 14277.577156815509,
        "read_bytes": 36302848,
        "read_bytes_per_second": 4314452.185725605,
        "write_bytes": 109142016,
        "write_bytes_per_second": 12971103.795649834,
        "read_requests": 2352,
        "read_requests_per_second": 279.5260454724275,
        "write_requests": 12416,
        "write_requests_per_second": 1475.5932740585288
    },
    {
        "dataset": "PatentCitations",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 5.201230764389038,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.5201230764389038,
        "operations_per_second": 1922.6218664371545,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/12/05-18:09:39",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315159.672512,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/12/05",
        "bytes_sent": 4000768,
        "bytes_sent_per_second": 769196.4039342041,
        "bytes_recv": 4001792,
        "bytes_recv_per_second": 769393.2804133273,
        "packets_sent": 41319,
        "packets_sent_per_second": 7944.081289931679,
        "packets_recv": 41322,
        "packets_recv_per_second": 7944.65807649161,
        "read_bytes": 114065408,
        "read_bytes_per_second": 21930464.762487553,
        "write_bytes": 193138688,
        "write_bytes_per_second": 37133266.48037832,
        "read_requests": 11395,
        "read_requests_per_second": 2190.8276168051375,
        "write_requests": 17650,
        "write_requests_per_second": 3393.4275942615777
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 60.00320315361023,
        "count_iterations": 1,
        "count_operations": 6087,
        "msecs_per_operation": 9.857598678102551,
        "operations_per_second": 101.44458429022654,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/14/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315262.656721,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/14/05",
        "bytes_sent": 5251072,
        "bytes_sent_per_second": 87513.19469657441,
        "bytes_recv": 5240832,
        "bytes_recv_per_second": 87342.53714061386,
        "packets_sent": 25139,
        "packets_sent_per_second": 418.96096672778134,
        "packets_recv": 25209,
        "packets_recv_per_second": 420.1275711142305,
        "read_bytes": 331452416,
        "read_bytes_per_second": 5523912.034353742,
        "write_bytes": 66215936,
        "write_bytes_per_second": 1103540.0198633557,
        "read_requests": 11100,
        "read_requests_per_second": 184.99012413693356,
        "write_requests": 2873,
        "write_requests_per_second": 47.880777175262175
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 45.12699794769287,
        "count_iterations": 1,
        "count_operations": 7700,
        "msecs_per_operation": 5.860649084115957,
        "operations_per_second": 170.62956434472204,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/15/05-18:09:07",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315307.785533,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/15/05",
        "bytes_sent": 617881600,
        "bytes_sent_per_second": 13692060.808392182,
        "bytes_recv": 617871360,
        "bytes_recv_per_second": 13691833.893231288,
        "packets_sent": 103261,
        "packets_sent_per_second": 2288.231096597447,
        "packets_recv": 103000,
        "packets_recv_per_second": 2282.4474191566715,
        "read_bytes": 443883520,
        "read_bytes_per_second": 9836318.394467754,
        "write_bytes": 38498304,
        "write_bytes_per_second": 853110.238900087,
        "read_requests": 10008,
        "read_requests_per_second": 221.7741142807764,
        "write_requests": 1076,
        "write_requests_per_second": 23.84381964089882
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 60.025423765182495,
        "count_iterations": 1,
        "count_operations": 2925,
        "msecs_per_operation": 20.52151239835299,
        "operations_per_second": 48.729351939979715,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/16/05-18:09:07",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315367.81233,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/16/05",
        "bytes_sent": 462722048,
        "bytes_sent_per_second": 7708767.701668439,
        "bytes_recv": 462704640,
        "bytes_recv_per_second": 7708477.691221065,
        "packets_sent": 61675,
        "packets_sent_per_second": 1027.4812926147858,
        "packets_recv": 61577,
        "packets_recv_per_second": 1025.848651079703,
        "read_bytes": 224563200,
        "read_bytes_per_second": 3741134.771134377,
        "write_bytes": 73867264,
        "write_bytes_per_second": 1230599.625401502,
        "read_requests": 8530,
        "read_requests_per_second": 142.10645198223145,
        "write_requests": 4925,
        "write_requests_per_second": 82.04856694167525
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 60.0104660987854,
        "count_iterations": 1,
        "count_operations": 3095,
        "msecs_per_operation": 19.389488238702878,
        "operations_per_second": 51.574336964908895,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/17/05-18:09:07",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315427.824614,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/17/05",
        "bytes_sent": 489909248,
        "bytes_sent_per_second": 8163730.0932397805,
        "bytes_recv": 489904128,
        "bytes_recv_per_second": 8163644.774788969,
        "packets_sent": 65124,
        "packets_sent_per_second": 1085.2107012932881,
        "packets_recv": 65209,
        "packets_recv_per_second": 1086.6271208868318,
        "read_bytes": 194605056,
        "read_bytes_per_second": 3242851.9331886806,
        "write_bytes": 73506816,
        "write_bytes_per_second": 1224899.9346047032,
        "read_requests": 6733,
        "read_requests_per_second": 112.19709556857241,
        "write_requests": 4474,
        "write_requests_per_second": 74.55366190016233
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 60.03496980667114,
        "count_iterations": 1,
        "count_operations": 6452,
        "msecs_per_operation": 9.304862028312328,
        "operations_per_second": 107.47069617553214,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/18/05-18:09:07",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315487.861321,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/18/05",
        "bytes_sent": 4658176,
        "bytes_sent_per_second": 77591.04426970794,
        "bytes_recv": 4661248,
        "bytes_recv_per_second": 77642.21444618829,
        "packets_sent": 26505,
        "packets_sent_per_second": 441.49268476944815,
        "packets_recv": 26591,
        "packets_recv_per_second": 442.9251831995622,
        "read_bytes": 447385600,
        "read_bytes_per_second": 7452083.368088678,
        "write_bytes": 77238272,
        "write_bytes_per_second": 1286554.6905200111,
        "read_requests": 15520,
        "read_requests_per_second": 258.5159957601145,
        "write_requests": 3866,
        "write_requests_per_second": 64.39580152117286
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 14.054862022399902,
        "count_iterations": 1,
        "count_operations": 7700,
        "msecs_per_operation": 1.8253067561558314,
        "operations_per_second": 547.8531192784492,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/18/05-18:09:21",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315501.917613,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/18/05",
        "bytes_sent": 5118976,
        "bytes_sent_per_second": 364213.89209240506,
        "bytes_recv": 5124096,
        "bytes_recv_per_second": 364578.17884184734,
        "packets_sent": 30910,
        "packets_sent_per_second": 2199.238950246346,
        "packets_recv": 30935,
        "packets_recv_per_second": 2201.0176941401073,
        "read_bytes": 183353344,
        "read_bytes_per_second": 13045545.641627861,
        "write_bytes": 886059008,
        "write_bytes_per_second": 63042881.99968421,
        "read_requests": 4112,
        "read_requests_per_second": 292.567795645842,
        "write_requests": 3461,
        "write_requests_per_second": 246.24930465230037
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 11.577712297439575,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.1577712297439575,
        "operations_per_second": 863.7284934271092,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/18/05-18:09:33",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315513.496551,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/18/05",
        "bytes_sent": 4673536,
        "bytes_sent_per_second": 403666.62082573585,
        "bytes_recv": 4674560,
        "bytes_recv_per_second": 403755.0666234628,
        "packets_sent": 40098,
        "packets_sent_per_second": 3463.3785129440225,
        "packets_recv": 40124,
        "packets_recv_per_second": 3465.624207026933,
        "read_bytes": 661229568,
        "read_bytes_per_second": 57112281.85780983,
        "write_bytes": 301060096,
        "write_bytes_per_second": 26003418.314910088,
        "read_requests": 15706,
        "read_requests_per_second": 1356.5719717766178,
        "write_requests": 4675,
        "write_requests_per_second": 403.79307067717355
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 4.32820725440979,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.432820725440979,
        "operations_per_second": 2310.425405301816,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/18/05-18:09:37",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315517.826797,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/18/05",
        "bytes_sent": 6401024,
        "bytes_sent_per_second": 1478908.8469546651,
        "bytes_recv": 6362112,
        "bytes_recv_per_second": 1469918.5196175547,
        "packets_sent": 40061,
        "packets_sent_per_second": 9255.795216179606,
        "packets_recv": 40078,
        "packets_recv_per_second": 9259.72293936862,
        "read_bytes": 38506496,
        "read_bytes_per_second": 8896638.662755277,
        "write_bytes": 57188352,
        "write_bytes_per_second": 13212942.134814292,
        "read_requests": 696,
        "read_requests_per_second": 160.8056082090064,
        "write_requests": 1211,
        "write_requests_per_second": 279.7925165820499
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 1.1914689540863037,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.11914689540863037,
        "operations_per_second": 8393.000896669317,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/18/05-18:09:39",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315519.019694,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/18/05",
        "bytes_sent": 130048,
        "bytes_sent_per_second": 109149.29806100513,
        "bytes_recv": 129024,
        "bytes_recv_per_second": 108289.85476918619,
        "packets_sent": 413,
        "packets_sent_per_second": 346.6309370324428,
        "packets_recv": 418,
        "packets_recv_per_second": 350.82743748077746,
        "read_bytes": 22929408,
        "read_bytes_per_second": 19244654.19040966,
        "write_bytes": 80637952,
        "write_bytes_per_second": 67679440.34415773,
        "read_requests": 156,
        "read_requests_per_second": 130.93081398804134,
        "write_requests": 595,
        "write_requests_per_second": 499.38355335182433
    },
    {
        "dataset": "MouseGenes",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 2.157870054244995,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.2157870054244995,
        "operations_per_second": 4634.1993487178925,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/18/05-18:09:41",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315521.178982,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/18/05",
        "bytes_sent": 1786880,
        "bytes_sent_per_second": 828075.8132237028,
        "bytes_recv": 1786880,
        "bytes_recv_per_second": 828075.8132237028,
        "packets_sent": 815,
        "packets_sent_per_second": 377.68724692050824,
        "packets_recv": 431,
        "packets_recv_per_second": 199.73399192974117,
        "read_bytes": 22970368,
        "read_bytes_per_second": 10644926.442541033,
        "write_bytes": 28237824,
        "write_bytes_per_second": 13085970.559001047,
        "read_requests": 349,
        "read_requests_per_second": 161.73355727025447,
        "write_requests": 802,
        "write_requests_per_second": 371.66278776717496
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 29.74419403076172,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.9744194030761717,
        "operations_per_second": 336.20006612577595,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/19/05-18:09:32",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315572.692764,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/19/05",
        "bytes_sent": 52224,
        "bytes_sent_per_second": 1755.7712253352522,
        "bytes_recv": 56320,
        "bytes_recv_per_second": 1893.4787724203702,
        "packets_sent": 314,
        "packets_sent_per_second": 10.556682076349365,
        "packets_recv": 375,
        "packets_recv_per_second": 12.607502479716597,
        "read_bytes": 472227840,
        "read_bytes_per_second": 15876303.103443235,
        "write_bytes": 35233792,
        "write_bytes_per_second": 1184560.3200261835,
        "read_requests": 105382,
        "read_requests_per_second": 3542.943536846652,
        "write_requests": 611,
        "write_requests_per_second": 20.54182404028491
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 60.017443895339966,
        "count_iterations": 1,
        "count_operations": 4399,
        "msecs_per_operation": 13.64342893733575,
        "operations_per_second": 73.29535739094612,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/20/05-18:09:32",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315632.711893,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/20/05",
        "bytes_sent": 99328,
        "bytes_sent_per_second": 1654.9855100995444,
        "bytes_recv": 105472,
        "bytes_recv_per_second": 1757.3557478376606,
        "packets_sent": 471,
        "packets_sent_per_second": 7.8477184203536305,
        "packets_recv": 534,
        "packets_recv_per_second": 8.897413240910485,
        "read_bytes": 225710080,
        "read_bytes_per_second": 3760741.3003725936,
        "write_bytes": 35074048,
        "write_bytes_per_second": 584397.5638343258,
        "read_requests": 34146,
        "read_requests_per_second": 568.9345927418154,
        "write_requests": 1250,
        "write_requests_per_second": 20.827278185651885
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 60.00237011909485,
        "count_iterations": 1,
        "count_operations": 744,
        "msecs_per_operation": 80.64834693426727,
        "operations_per_second": 12.399510194735345,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/21/05-18:09:32",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315692.716086,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/21/05",
        "bytes_sent": 99328,
        "bytes_sent_per_second": 1655.4012750304735,
        "bytes_recv": 91136,
        "bytes_recv_per_second": 1518.8733348217747,
        "packets_sent": 431,
        "packets_sent_per_second": 7.183049588616846,
        "packets_recv": 483,
        "packets_recv_per_second": 8.04968202158222,
        "read_bytes": 887066624,
        "read_bytes_per_second": 14783859.74152885,
        "write_bytes": 42758144,
        "write_bytes_per_second": 712607.5839193036,
        "read_requests": 199263,
        "read_requests_per_second": 3320.9188171149854,
        "write_requests": 1029,
        "write_requests_per_second": 17.14932256771864
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 60.03394293785095,
        "count_iterations": 1,
        "count_operations": 1389,
        "msecs_per_operation": 43.220981236753744,
        "operations_per_second": 23.136911087748093,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/22/05-18:09:32",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315752.752036,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/22/05",
        "bytes_sent": 126976,
        "bytes_sent_per_second": 2115.070138429015,
        "bytes_recv": 125952,
        "bytes_recv_per_second": 2098.0131211836197,
        "packets_sent": 788,
        "packets_sent_per_second": 13.125907802120588,
        "packets_recv": 670,
        "packets_recv_per_second": 11.160353080483242,
        "read_bytes": 328753152,
        "read_bytes_per_second": 5476121.2725996645,
        "write_bytes": 45342720,
        "write_bytes_per_second": 755284.7236261031,
        "read_requests": 64479,
        "read_requests_per_second": 1074.0423974275805,
        "write_requests": 1115,
        "write_requests_per_second": 18.57282639513256
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 46.289791107177734,
        "count_iterations": 1,
        "count_operations": 7700,
        "msecs_per_operation": 6.011661182750355,
        "operations_per_second": 166.34337325419537,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/23/05-18:09:19",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315799.043563,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/23/05",
        "bytes_sent": 96256,
        "bytes_sent_per_second": 2079.421783890368,
        "bytes_recv": 99328,
        "bytes_recv_per_second": 2145.786308908145,
        "packets_sent": 693,
        "packets_sent_per_second": 14.970903592877585,
        "packets_recv": 654,
        "packets_recv_per_second": 14.128385208862829,
        "read_bytes": 238448640,
        "read_bytes_per_second": 5151214.431879904,
        "write_bytes": 65892352,
        "write_bytes_per_second": 1423474.8186146528,
        "read_requests": 50045,
        "read_requests_per_second": 1081.1239109748321,
        "write_requests": 840,
        "write_requests_per_second": 18.14654980954859
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 21.15040898323059,
        "count_iterations": 1,
        "count_operations": 7700,
        "msecs_per_operation": 2.746806361458518,
        "operations_per_second": 364.05915394378695,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/23/05-18:09:40",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315820.195839,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/23/05",
        "bytes_sent": 31744,
        "bytes_sent_per_second": 1500.869322440464,
        "bytes_recv": 38912,
        "bytes_recv_per_second": 1839.7752984754075,
        "packets_sent": 213,
        "packets_sent_per_second": 10.070727245458002,
        "packets_recv": 279,
        "packets_recv_per_second": 13.191234279261892,
        "read_bytes": 86114304,
        "read_bytes_per_second": 4071519.565804944,
        "write_bytes": 21200896,
        "write_bytes_per_second": 1002387.0468324957,
        "read_requests": 18382,
        "read_requests_per_second": 869.108489323986,
        "write_requests": 558,
        "write_requests_per_second": 26.382468558523783
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 24.909061908721924,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.4909061908721926,
        "operations_per_second": 401.4603214141314,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/24/05-18:09:05",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315845.106594,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/24/05",
        "bytes_sent": 56320,
        "bytes_sent_per_second": 2261.0245302043877,
        "bytes_recv": 54272,
        "bytes_recv_per_second": 2178.8054563787737,
        "packets_sent": 286,
        "packets_sent_per_second": 11.481765192444158,
        "packets_recv": 348,
        "packets_recv_per_second": 13.970819185211772,
        "read_bytes": 189202432,
        "read_bytes_per_second": 7595726.916305534,
        "write_bytes": 604950528,
        "write_bytes_per_second": 24286363.34105285,
        "read_requests": 41759,
        "read_requests_per_second": 1676.4581561932712,
        "write_requests": 62748,
        "write_requests_per_second": 2519.0832248093916
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 25.582440853118896,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.5582440853118897,
        "operations_per_second": 390.8931152197248,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/24/05-18:09:30",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315870.690422,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/24/05",
        "bytes_sent": 87040,
        "bytes_sent_per_second": 3402.3336748724846,
        "bytes_recv": 70656,
        "bytes_recv_per_second": 2761.8943948964875,
        "packets_sent": 349,
        "packets_sent_per_second": 13.642169721168395,
        "packets_recv": 381,
        "packets_recv_per_second": 14.893027689871515,
        "read_bytes": 48050176,
        "read_bytes_per_second": 1878248.2983496056,
        "write_bytes": 628609024,
        "write_bytes_per_second": 24571893.964659076,
        "read_requests": 7828,
        "read_requests_per_second": 305.9911305940006,
        "write_requests": 93008,
        "write_requests_per_second": 3635.6186860356165
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 16.808056116104126,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.6808056116104126,
        "operations_per_second": 594.9527970946507,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/24/05-18:09:47",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315887.499779,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/24/05",
        "bytes_sent": 45056,
        "bytes_sent_per_second": 2680.619322589658,
        "bytes_recv": 37888,
        "bytes_recv_per_second": 2254.1571576322126,
        "packets_sent": 342,
        "packets_sent_per_second": 20.347385660637052,
        "packets_recv": 233,
        "packets_recv_per_second": 13.86240017230536,
        "read_bytes": 43216896,
        "read_bytes_per_second": 2571201.315694862,
        "write_bytes": 594644992,
        "write_bytes_per_second": 35378570.126872614,
        "read_requests": 1141,
        "read_requests_per_second": 67.88411414849963,
        "write_requests": 90888,
        "write_requests_per_second": 5407.406982233861
    },
    {
        "dataset": "MouseGenes",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 3.0139000415802,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.30139000415802003,
        "operations_per_second": 3317.960072344323,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/24/05-18:09:50",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315890.51513,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/24/05",
        "bytes_sent": 1024,
        "bytes_sent_per_second": 339.7591114080587,
        "bytes_recv": 1024,
        "bytes_recv_per_second": 339.7591114080587,
        "packets_sent": 8,
        "packets_sent_per_second": 2.6543680578754585,
        "packets_recv": 16,
        "packets_recv_per_second": 5.308736115750917,
        "read_bytes": 9809920,
        "read_bytes_per_second": 3254892.287289202,
        "write_bytes": 256348160,
        "write_bytes_per_second": 85055295.94989341,
        "read_requests": 827,
        "read_requests_per_second": 274.39529798287555,
        "write_requests": 30857,
        "write_requests_per_second": 10238.229395232878
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 21.56766390800476,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.156766390800476,
        "operations_per_second": 463.65707675408163,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/25/05-18:09:21",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315921.987849,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/25/05",
        "bytes_sent": 20027392,
        "bytes_sent_per_second": 928584.202972808,
        "bytes_recv": 20028416,
        "bytes_recv_per_second": 928631.6814574677,
        "packets_sent": 120318,
        "packets_sent_per_second": 5578.629216089759,
        "packets_recv": 120300,
        "packets_recv_per_second": 5577.794633351602,
        "read_bytes": 449675264,
        "read_bytes_per_second": 20849511.83948599,
        "write_bytes": 1802383360,
        "write_bytes_per_second": 83568779.98877996,
        "read_requests": 25786,
        "read_requests_per_second": 1195.586138118075,
        "write_requests": 6953,
        "write_requests_per_second": 322.38076546711295
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 60.007028341293335,
        "count_iterations": 1,
        "count_operations": 4311,
        "msecs_per_operation": 13.919514808929096,
        "operations_per_second": 71.84158454707915,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/26/05-18:09:21",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599315981.996529,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/26/05",
        "bytes_sent": 144827392,
        "bytes_sent_per_second": 2413507.1508005047,
        "bytes_recv": 144818176,
        "bytes_recv_per_second": 2413353.568790951,
        "packets_sent": 71454,
        "packets_sent_per_second": 1190.7605154783098,
        "packets_recv": 71449,
        "packets_recv_per_second": 1190.6771919054183,
        "read_bytes": 181784576,
        "read_bytes_per_second": 3029388.073778459,
        "write_bytes": 370069504,
        "write_bytes_per_second": 6167102.658295441,
        "read_requests": 2207,
        "read_requests_per_second": 36.77902507432236,
        "write_requests": 2007,
        "write_requests_per_second": 33.44608215866106
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 60.03520107269287,
        "count_iterations": 1,
        "count_operations": 1983,
        "msecs_per_operation": 30.274937505140127,
        "operations_per_second": 33.030621444890464,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/27/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316042.033364,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/27/05",
        "bytes_sent": 127900672,
        "bytes_sent_per_second": 2130427.977498286,
        "bytes_recv": 127891456,
        "bytes_recv_per_second": 2130274.467560194,
        "packets_sent": 43857,
        "packets_sent_per_second": 730.5214143764806,
        "packets_recv": 43944,
        "packets_recv_per_second": 731.9705641826861,
        "read_bytes": 196980736,
        "read_bytes_per_second": 3281087.3034553234,
        "write_bytes": 3739648,
        "write_bytes_per_second": 62290.921545709396,
        "read_requests": 2449,
        "read_requests_per_second": 40.7927341999681,
        "write_requests": 615,
        "write_requests_per_second": 10.243990009383577
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 60.00772714614868,
        "count_iterations": 1,
        "count_operations": 1952,
        "msecs_per_operation": 30.7416634970024,
        "operations_per_second": 32.5291440424982,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/28/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316102.042535,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/28/05",
        "bytes_sent": 125917184,
        "bytes_sent_per_second": 2098349.495779585,
        "bytes_recv": 125908992,
        "bytes_recv_per_second": 2098212.980027538,
        "packets_sent": 43493,
        "packets_sent_per_second": 724.789990696913,
        "packets_recv": 43437,
        "packets_recv_per_second": 723.8567775481529,
        "read_bytes": 177160192,
        "read_bytes_per_second": 2952289.6537728678,
        "write_bytes": 44433408,
        "write_bytes_per_second": 740461.439104043,
        "read_requests": 1201,
        "read_requests_per_second": 20.014089136803452,
        "write_requests": 618,
        "write_requests_per_second": 10.298673677389287
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 60.10411477088928,
        "count_iterations": 1,
        "count_operations": 477,
        "msecs_per_operation": 126.00443348194817,
        "operations_per_second": 7.9362286894711795,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/29/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316162.148044,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/29/05",
        "bytes_sent": 659456,
        "bytes_sent_per_second": 10971.894395479887,
        "bytes_recv": 651264,
        "bytes_recv_per_second": 10835.597570691318,
        "packets_sent": 6384,
        "packets_sent_per_second": 106.21568963015515,
        "packets_recv": 6295,
        "packets_recv_per_second": 104.73492578662699,
        "read_bytes": 187518976,
        "read_bytes_per_second": 3119902.467822762,
        "write_bytes": 29511680,
        "write_bytes_per_second": 491009.3113008235,
        "read_requests": 1438,
        "read_requests_per_second": 23.925150640376426,
        "write_requests": 628,
        "write_requests_per_second": 10.448535884670651
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 57.43730926513672,
        "count_iterations": 1,
        "count_operations": 7700,
        "msecs_per_operation": 7.459390813654119,
        "operations_per_second": 134.05920469665426,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/30/05-18:09:19",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316219.586524,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/30/05",
        "bytes_sent": 8774656,
        "bytes_sent_per_second": 152769.2733567176,
        "bytes_recv": 8776704,
        "bytes_recv_per_second": 152804.92962310964,
        "packets_sent": 92680,
        "packets_sent_per_second": 1613.5853365306386,
        "packets_recv": 92722,
        "packets_recv_per_second": 1614.3165685562567,
        "read_bytes": 166801408,
        "read_bytes_per_second": 2904060.272566512,
        "write_bytes": 10252288,
        "write_bytes_per_second": 178495.2695585782,
        "read_requests": 1176,
        "read_requests_per_second": 20.474496717307197,
        "write_requests": 598,
        "write_requests_per_second": 10.411351221896007
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 14.09481692314148,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.409481692314148,
        "operations_per_second": 709.4806590628054,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/30/05-18:09:33",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316233.683004,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/30/05",
        "bytes_sent": 9621504,
        "bytes_sent_per_second": 682627.0999095419,
        "bytes_recv": 9625600,
        "bytes_recv_per_second": 682917.703187494,
        "packets_sent": 120037,
        "packets_sent_per_second": 8516.392987192197,
        "packets_recv": 120055,
        "packets_recv_per_second": 8517.670052378511,
        "read_bytes": 236580864,
        "read_bytes_per_second": 16784954.731236793,
        "write_bytes": 1922891776,
        "write_bytes_per_second": 136425452.45429283,
        "read_requests": 11905,
        "read_requests_per_second": 844.6367246142698,
        "write_requests": 127107,
        "write_requests_per_second": 9017.9958131496
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 26.1766037940979,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.61766037940979,
        "operations_per_second": 382.02052789807374,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/30/05-18:09:59",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316259.86082,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/30/05",
        "bytes_sent": 22523904,
        "bytes_sent_per_second": 860459.3696405535,
        "bytes_recv": 22516736,
        "bytes_recv_per_second": 860185.5373261562,
        "packets_sent": 160106,
        "packets_sent_per_second": 6116.3778639649,
        "packets_recv": 160142,
        "packets_recv_per_second": 6117.753137865333,
        "read_bytes": 255488000,
        "read_bytes_per_second": 9760166.063162306,
        "write_bytes": 4820447232,
        "write_bytes_per_second": 184150979.62734485,
        "read_requests": 13496,
        "read_requests_per_second": 515.5749044512403,
        "write_requests": 167263,
        "write_requests_per_second": 6389.789955781551
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 16.42271399497986,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.6422713994979858,
        "operations_per_second": 608.9127535836542,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/31/05-18:09:16",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316276.284726,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/31/05",
        "bytes_sent": 9628672,
        "bytes_sent_per_second": 586302.1180873831,
        "bytes_recv": 9627648,
        "bytes_recv_per_second": 586239.7654214161,
        "packets_sent": 120050,
        "packets_sent_per_second": 7309.997606771769,
        "packets_recv": 120069,
        "packets_recv_per_second": 7311.154541003578,
        "read_bytes": 112631808,
        "read_bytes_per_second": 6858294.435038545,
        "write_bytes": 3831865344,
        "write_bytes_per_second": 233327167.79768163,
        "read_requests": 4840,
        "read_requests_per_second": 294.71377273448866,
        "write_requests": 190553,
        "write_requests_per_second": 11603.015193362606
    },
    {
        "dataset": "MouseGenes",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 4.517615079879761,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.4517615079879761,
        "operations_per_second": 2213.557335713993,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/31/05-18:09:20",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316280.803727,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/31/05",
        "bytes_sent": 744448,
        "bytes_sent_per_second": 164787.83314576105,
        "bytes_recv": 745472,
        "bytes_recv_per_second": 165014.50141693818,
        "packets_sent": 1619,
        "packets_sent_per_second": 358.3749326520954,
        "packets_recv": 1623,
        "packets_recv_per_second": 359.260355586381,
        "read_bytes": 3407872,
        "read_bytes_per_second": 754352.0064774316,
        "write_bytes": 1697415168,
        "write_bytes_per_second": 375732579.68785995,
        "read_requests": 139,
        "read_requests_per_second": 30.7684469664245,
        "write_requests": 60985,
        "write_requests_per_second": 13499.379411851785
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 47.591089963912964,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 4.759108996391296,
        "operations_per_second": 210.12336568846666,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/32/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316342.851583,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/32/05",
        "bytes_sent": 16461824,
        "bytes_sent_per_second": 345901.38642511773,
        "bytes_recv": 16453632,
        "bytes_recv_per_second": 345729.25336394575,
        "packets_sent": 120846,
        "packets_sent_per_second": 2539.2568249988444,
        "packets_recv": 120904,
        "packets_recv_per_second": 2540.4755405198375,
        "read_bytes": 814391296,
        "read_bytes_per_second": 17112264.01029123,
        "write_bytes": 108597248,
        "write_bytes_per_second": 2281881.9254265106,
        "read_requests": 88571,
        "read_requests_per_second": 1861.083662239318,
        "write_requests": 3701,
        "write_requests_per_second": 77.76665764130152
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 60.013901233673096,
        "count_iterations": 1,
        "count_operations": 3673,
        "msecs_per_operation": 16.339205345405144,
        "operations_per_second": 61.202486832152864,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/33/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316402.866991,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/33/05",
        "bytes_sent": 194717696,
        "bytes_sent_per_second": 3244543.214110303,
        "bytes_recv": 194702336,
        "bytes_recv_per_second": 3244287.273408495,
        "packets_sent": 87311,
        "packets_sent_per_second": 1454.8462640354203,
        "packets_recv": 87068,
        "packets_recv_per_second": 1450.7972021513438,
        "read_bytes": 991690752,
        "read_bytes_per_second": 16524350.718989318,
        "write_bytes": 599883776,
        "write_bytes_per_second": 9995747.046409512,
        "read_requests": 46889,
        "read_requests_per_second": 781.3023155656998,
        "write_requests": 3168,
        "write_requests_per_second": 52.787769747960866
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 60.05498695373535,
        "count_iterations": 1,
        "count_operations": 453,
        "msecs_per_operation": 132.57171512965863,
        "operations_per_second": 7.543087143603549,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/34/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316462.923581,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/34/05",
        "bytes_sent": 44651520,
        "bytes_sent_per_second": 743510.6102745183,
        "bytes_recv": 44660736,
        "bytes_recv_per_second": 743664.0696368039,
        "packets_sent": 16125,
        "packets_sent_per_second": 268.5039297805899,
        "packets_recv": 16253,
        "packets_recv_per_second": 270.63530981233663,
        "read_bytes": 1942888448,
        "read_bytes_per_second": 32351825.32795729,
        "write_bytes": 400216064,
        "write_bytes_per_second": 6664160.3687020205,
        "read_requests": 216691,
        "read_requests_per_second": 3608.209925462686,
        "write_requests": 1972,
        "write_requests_per_second": 32.83657361409757
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 60.00684595108032,
        "count_iterations": 1,
        "count_operations": 680,
        "msecs_per_operation": 88.24536169276517,
        "operations_per_second": 11.332040356767955,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/35/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316522.931855,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/35/05",
        "bytes_sent": 69232640,
        "bytes_sent_per_second": 1153745.6918905696,
        "bytes_recv": 69235712,
        "bytes_recv_per_second": 1153796.886049358,
        "packets_sent": 24532,
        "packets_sent_per_second": 408.82002063563453,
        "packets_recv": 24558,
        "packets_recv_per_second": 409.2533045316286,
        "read_bytes": 1503174656,
        "read_bytes_per_second": 25050052.742739394,
        "write_bytes": 193220608,
        "write_bytes_per_second": 3219976.0700224135,
        "read_requests": 166338,
        "read_requests_per_second": 2771.9837189177474,
        "write_requests": 1488,
        "write_requests_per_second": 24.797170663045172
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 60.0061092376709,
        "count_iterations": 1,
        "count_operations": 4163,
        "msecs_per_operation": 14.414150669630292,
        "operations_per_second": 69.37626939802546,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/36/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316582.939581,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/36/05",
        "bytes_sent": 4359168,
        "bytes_sent_per_second": 72645.40319943594,
        "bytes_recv": 4339712,
        "bytes_recv_per_second": 72321.16954644339,
        "packets_sent": 50892,
        "packets_sent_per_second": 848.1136445362266,
        "packets_recv": 50658,
        "packets_recv_per_second": 844.2140415962463,
        "read_bytes": 1756737536,
        "read_bytes_per_second": 29275978.03486895,
        "write_bytes": 19554304,
        "write_bytes_per_second": 325871.886186617,
        "read_requests": 135573,
        "read_requests_per_second": 2259.31995462371,
        "write_requests": 1108,
        "write_requests_per_second": 18.464786570504973
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 14.7014000415802,
        "count_iterations": 1,
        "count_operations": 7700,
        "msecs_per_operation": 1.9092727326727532,
        "operations_per_second": 523.7596404575054,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/36/05-18:09:37",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316597.642434,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/36/05",
        "bytes_sent": 7476224,
        "bytes_sent_per_second": 508538.2330155549,
        "bytes_recv": 7482368,
        "bytes_recv_per_second": 508956.15239620046,
        "packets_sent": 92526,
        "packets_sent_per_second": 6293.68629778846,
        "packets_recv": 92564,
        "packets_recv_per_second": 6296.271085624484,
        "read_bytes": 223055872,
        "read_bytes_per_second": 15172423.807877317,
        "write_bytes": 3022848,
        "write_bytes_per_second": 205616.33527762198,
        "read_requests": 21093,
        "read_requests_per_second": 1434.76131119093,
        "write_requests": 453,
        "write_requests_per_second": 30.813391834707783
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 10.365861892700195,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.0365861892700194,
        "operations_per_second": 964.7051160349878,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/36/05-18:09:48",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316608.009709,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/36/05",
        "bytes_sent": 8128512,
        "bytes_sent_per_second": 784161.7112151791,
        "bytes_recv": 8122368,
        "bytes_recv_per_second": 783568.9963918872,
        "packets_sent": 120145,
        "packets_sent_per_second": 11590.44961660236,
        "packets_recv": 120159,
        "packets_recv_per_second": 11591.80020376481,
        "read_bytes": 119791616,
        "read_bytes_per_second": 11556358.48132987,
        "write_bytes": 180502528,
        "write_bytes_per_second": 17413171.22188486,
        "read_requests": 9949,
        "read_requests_per_second": 959.7851199432093,
        "write_requests": 11206,
        "write_requests_per_second": 1081.0485530288074
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 22.348591327667236,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.2348591327667235,
        "operations_per_second": 447.4554952204143,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/37/05-18:09:10",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316630.359537,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/37/05",
        "bytes_sent": 17550336,
        "bytes_sent_per_second": 785299.4286164666,
        "bytes_recv": 17529856,
        "bytes_recv_per_second": 784383.0397622552,
        "packets_sent": 160309,
        "packets_sent_per_second": 7173.11429832894,
        "packets_recv": 160332,
        "packets_recv_per_second": 7174.143445967947,
        "read_bytes": 427208704,
        "read_bytes_per_second": 19115688.22107914,
        "write_bytes": 539561984,
        "write_bytes_per_second": 24142997.475282926,
        "read_requests": 24173,
        "read_requests_per_second": 1081.6341685963075,
        "write_requests": 30274,
        "write_requests_per_second": 1354.6267662302823
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 7.441729784011841,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.744172978401184,
        "operations_per_second": 1343.7735970317635,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/37/05-18:09:17",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316637.802474,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/37/05",
        "bytes_sent": 8109056,
        "bytes_sent_per_second": 1089673.5349652003,
        "bytes_recv": 8110080,
        "bytes_recv_per_second": 1089811.1373815364,
        "packets_sent": 120103,
        "packets_sent_per_second": 16139.124032430589,
        "packets_recv": 120106,
        "packets_recv_per_second": 16139.527164509698,
        "read_bytes": 50253824,
        "read_bytes_per_second": 6752976.184108117,
        "write_bytes": 216285184,
        "write_bytes_per_second": 29063831.96883568,
        "read_requests": 906,
        "read_requests_per_second": 121.74588789107777,
        "write_requests": 17936,
        "write_requests_per_second": 2410.192323636171
    },
    {
        "dataset": "MouseGenes",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 4.788177013397217,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.4788177013397217,
        "operations_per_second": 2088.4775086677487,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/37/05-18:09:22",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316642.591981,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/37/05",
        "bytes_sent": 3994624,
        "bytes_sent_per_second": 834268.2379584396,
        "bytes_recv": 3993600,
        "bytes_recv_per_second": 834054.377861552,
        "packets_sent": 41267,
        "packets_sent_per_second": 8618.520135019198,
        "packets_recv": 41275,
        "packets_recv_per_second": 8620.190917026132,
        "read_bytes": 95936512,
        "read_bytes_per_second": 20036124.757203355,
        "write_bytes": 361115648,
        "write_bytes_per_second": 75418190.88759796,
        "read_requests": 9042,
        "read_requests_per_second": 1888.4013633373781,
        "write_requests": 9157,
        "write_requests_per_second": 1912.4188546870573
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 60.02103805541992,
        "count_iterations": 1,
        "count_operations": 3457,
        "msecs_per_operation": 17.362174733994774,
        "operations_per_second": 57.596471370721844,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/43/05-18:09:11",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599316991.881391,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/43/05",
        "bytes_sent": 2369536,
        "bytes_sent_per_second": 39478.424178737274,
        "bytes_recv": 2371584,
        "bytes_recv_per_second": 39512.54554794967,
        "packets_sent": 14073,
        "packets_sent_per_second": 234.46778756151824,
        "packets_recv": 14249,
        "packets_recv_per_second": 237.40009272820816,
        "read_bytes": 641318912,
        "read_bytes_per_second": 10684902.040645208,
        "write_bytes": 3764224,
        "write_bytes_per_second": 62715.07661237607,
        "read_requests": 26568,
        "read_requests_per_second": 442.64479357169165,
        "write_requests": 620,
        "write_requests_per_second": 10.329711382657663
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 60.03459405899048,
        "count_iterations": 1,
        "count_operations": 3693,
        "msecs_per_operation": 16.256321164091656,
        "operations_per_second": 61.51453271044405,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/44/05-18:09:11",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317051.917818,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/44/05",
        "bytes_sent": 96516096,
        "bytes_sent_per_second": 1607674.6667956563,
        "bytes_recv": 96580608,
        "bytes_recv_per_second": 1608749.247227342,
        "packets_sent": 28177,
        "packets_sent_per_second": 469.34605691366966,
        "packets_recv": 28325,
        "packets_recv_per_second": 471.81130219965553,
        "read_bytes": 461983744,
        "read_bytes_per_second": 7695292.210122234,
        "write_bytes": 6324224,
        "write_bytes_per_second": 105342.99596971984,
        "read_requests": 14451,
        "read_requests_per_second": 240.71121370122583,
        "write_requests": 1017,
        "write_requests_per_second": 16.9402328097811
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 60.0864782333374,
        "count_iterations": 1,
        "count_operations": 3006,
        "msecs_per_operation": 19.9888483810171,
        "operations_per_second": 50.02789460095533,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/45/05-18:09:12",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317112.006066,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/45/05",
        "bytes_sent": 166329344,
        "bytes_sent_per_second": 2768165.964962755,
        "bytes_recv": 166315008,
        "bytes_recv_per_second": 2767927.3755093287,
        "packets_sent": 33403,
        "packets_sent_per_second": 555.9154236046942,
        "packets_recv": 33509,
        "packets_recv_per_second": 557.679547632539,
        "read_bytes": 574976000,
        "read_bytes_per_second": 9569141.292774081,
        "write_bytes": 7135232,
        "write_bytes_per_second": 118749.37939100589,
        "read_requests": 24438,
        "read_requests_per_second": 406.71380181575057,
        "write_requests": 1117,
        "write_requests_per_second": 18.589873010401565
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 60.043928146362305,
        "count_iterations": 1,
        "count_operations": 3055,
        "msecs_per_operation": 19.654313632197155,
        "operations_per_second": 50.87941602609961,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/46/05-18:09:12",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317172.051471,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/46/05",
        "bytes_sent": 169527296,
        "bytes_sent_per_second": 2823387.830102695,
        "bytes_recv": 169529344,
        "bytes_recv_per_second": 2823421.9384640767,
        "packets_sent": 33892,
        "packets_sent_per_second": 564.4534101330829,
        "packets_recv": 34074,
        "packets_recv_per_second": 567.4845242793186,
        "read_bytes": 266309632,
        "read_bytes_per_second": 4435246.6639232375,
        "write_bytes": 9723904,
        "write_bytes_per_second": 161946.49984086878,
        "read_requests": 10318,
        "read_requests_per_second": 171.84085582890208,
        "write_requests": 1012,
        "write_requests_per_second": 16.85432701093709
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 60.00316095352173,
        "count_iterations": 1,
        "count_operations": 3995,
        "msecs_per_operation": 15.019564694248244,
        "operations_per_second": 66.57982573775597,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/47/05-18:09:12",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317232.056089,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/47/05",
        "bytes_sent": 2940928,
        "bytes_sent_per_second": 49012.88454249992,
        "bytes_recv": 2956288,
        "bytes_recv_per_second": 49268.87105647537,
        "packets_sent": 17235,
        "packets_sent_per_second": 287.2348677322213,
        "packets_recv": 16520,
        "packets_recv_per_second": 275.3188288329734,
        "read_bytes": 463921152,
        "read_bytes_per_second": 7731611.878903379,
        "write_bytes": 451325952,
        "write_bytes_per_second": 7521702.937443508,
        "read_requests": 12940,
        "read_requests_per_second": 215.6553053933823,
        "write_requests": 2763,
        "write_requests_per_second": 46.0475740959749
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 60.00715088844299,
        "count_iterations": 1,
        "count_operations": 4863,
        "msecs_per_operation": 12.33953339264713,
        "operations_per_second": 81.0403414926434,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/48/05-18:09:12",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317292.06465,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/48/05",
        "bytes_sent": 3374080,
        "bytes_sent_per_second": 56227.96533487523,
        "bytes_recv": 3369984,
        "bytes_recv_per_second": 56159.70680336097,
        "packets_sent": 20243,
        "packets_sent_per_second": 337.34312828204406,
        "packets_recv": 20225,
        "packets_recv_per_second": 337.04316403222555,
        "read_bytes": 223547392,
        "read_bytes_per_second": 3725345.8744540038,
        "write_bytes": 64503808,
        "write_bytes_per_second": 1074935.3542866344,
        "read_requests": 6846,
        "read_requests_per_second": 114.0864030143197,
        "write_requests": 4299,
        "write_requests_per_second": 71.64146166499567
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 20.76254892349243,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.076254892349243,
        "operations_per_second": 481.636432831481,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/48/05-18:09:32",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317312.82845,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/48/05",
        "bytes_sent": 4688896,
        "bytes_sent_per_second": 225834.31433577999,
        "bytes_recv": 4684800,
        "bytes_recv_per_second": 225637.03605289222,
        "packets_sent": 40213,
        "packets_sent_per_second": 1936.8045873452345,
        "packets_recv": 40200,
        "packets_recv_per_second": 1936.1784599825535,
        "read_bytes": 560136192,
        "read_bytes_per_second": 26978199.74146895,
        "write_bytes": 603262976,
        "write_bytes_per_second": 29055342.78199433,
        "read_requests": 32781,
        "read_requests_per_second": 1578.8523904648778,
        "write_requests": 9216,
        "write_requests_per_second": 443.87613649749284
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 6.782750844955444,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.6782750844955444,
        "operations_per_second": 1474.3280755237133,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/48/05-18:09:39",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317319.61311,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/48/05",
        "bytes_sent": 6440960,
        "bytes_sent_per_second": 949608.8161325216,
        "bytes_recv": 6439936,
        "bytes_recv_per_second": 949457.844937588,
        "packets_sent": 40065,
        "packets_sent_per_second": 5906.895434585757,
        "packets_recv": 40067,
        "packets_recv_per_second": 5907.190300200862,
        "read_bytes": 105721856,
        "read_bytes_per_second": 15586870.049727513,
        "write_bytes": 10465280,
        "write_bytes_per_second": 1542925.6122216806,
        "read_requests": 6210,
        "read_requests_per_second": 915.5577349002259,
        "write_requests": 1521,
        "write_requests_per_second": 224.2453002871568
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 1.9358398914337158,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.19358398914337158,
        "operations_per_second": 5165.716464595546,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/48/05-18:09:41",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317321.550192,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/48/05",
        "bytes_sent": 129024,
        "bytes_sent_per_second": 66650.14011279757,
        "bytes_recv": 129024,
        "bytes_recv_per_second": 66650.14011279757,
        "packets_sent": 412,
        "packets_sent_per_second": 212.82751834133649,
        "packets_recv": 414,
        "packets_recv_per_second": 213.8606616342556,
        "read_bytes": 9711616,
        "read_bytes_per_second": 5016745.466902954,
        "write_bytes": 3739648,
        "write_bytes_per_second": 1931796.1245391804,
        "read_requests": 47,
        "read_requests_per_second": 24.278867383599067,
        "write_requests": 507,
        "write_requests_per_second": 261.90182475499415
    },
    {
        "dataset": "HumanBrain",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 2.906803846359253,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.29068038463592527,
        "operations_per_second": 3440.2046125420243,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/48/05-18:09:44",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317324.458451,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/48/05",
        "bytes_sent": 1871872,
        "bytes_sent_per_second": 643962.2688488264,
        "bytes_recv": 1868800,
        "bytes_recv_per_second": 642905.4379918536,
        "packets_sent": 438,
        "packets_sent_per_second": 150.68096202934066,
        "packets_recv": 444,
        "packets_recv_per_second": 152.74508479686588,
        "read_bytes": 11505664,
        "read_bytes_per_second": 3958183.8363158717,
        "write_bytes": 6295552,
        "write_bytes_per_second": 2165798.702889817,
        "read_requests": 61,
        "read_requests_per_second": 20.98524813650635,
        "write_requests": 757,
        "write_requests_per_second": 260.42348916943126
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 60.30744004249573,
        "count_iterations": 1,
        "count_operations": 1214,
        "msecs_per_operation": 49.676639244230415,
        "operations_per_second": 20.130186244757745,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/52/05-18:09:00",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317520.891484,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/52/05",
        "bytes_sent": 97280,
        "bytes_sent_per_second": 1613.0679719028283,
        "bytes_recv": 77824,
        "bytes_recv_per_second": 1290.4543775222626,
        "packets_sent": 562,
        "packets_sent_per_second": 9.318916531757704,
        "packets_recv": 339,
        "packets_recv_per_second": 5.62119698267947,
        "read_bytes": 1585594368,
        "read_bytes_per_second": 26291853.324941475,
        "write_bytes": 32215040,
        "write_bytes_per_second": 534180.1936427682,
        "read_requests": 361468,
        "read_requests_per_second": 5993.754663525612,
        "write_requests": 990,
        "write_requests_per_second": 16.415884993665706
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 60.00170707702637,
        "count_iterations": 1,
        "count_operations": 1646,
        "msecs_per_operation": 36.45304196660168,
        "operations_per_second": 27.432552841987814,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/53/05-18:09:00",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317580.895573,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/53/05",
        "bytes_sent": 83968,
        "bytes_sent_per_second": 1399.4268511762045,
        "bytes_recv": 66560,
        "bytes_recv_per_second": 1109.3017722738207,
        "packets_sent": 315,
        "packets_sent_per_second": 5.249850635009818,
        "packets_recv": 350,
        "packets_recv_per_second": 5.833167372233132,
        "read_bytes": 1407574016,
        "read_bytes_per_second": 23458899.49752673,
        "write_bytes": 31870976,
        "write_bytes_per_second": 531167.8209269291,
        "read_requests": 315849,
        "read_requests_per_second": 5264.000232435607,
        "write_requests": 981,
        "write_requests_per_second": 16.349534834744862
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 60.005932092666626,
        "count_iterations": 1,
        "count_operations": 1473,
        "msecs_per_operation": 40.737224774383314,
        "operations_per_second": 24.54757302536788,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/54/05-18:09:00",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317640.903083,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/54/05",
        "bytes_sent": 66560,
        "bytes_sent_per_second": 1109.2236663737176,
        "bytes_recv": 60416,
        "bytes_recv_per_second": 1006.8337894776821,
        "packets_sent": 390,
        "packets_sent_per_second": 6.499357420158502,
        "packets_recv": 282,
        "packets_recv_per_second": 4.699535365345378,
        "read_bytes": 1237708800,
        "read_bytes_per_second": 20626440.700706344,
        "write_bytes": 31313920,
        "write_bytes_per_second": 521847.07258012745,
        "read_requests": 272935,
        "read_requests_per_second": 4548.466967874258,
        "write_requests": 853,
        "write_requests_per_second": 14.215261229218466
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 60.01316213607788,
        "count_iterations": 1,
        "count_operations": 1482,
        "msecs_per_operation": 40.49471129290006,
        "operations_per_second": 24.694582775685333,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/55/05-18:09:00",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317700.918096,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/55/05",
        "bytes_sent": 77824,
        "bytes_sent_per_second": 1296.7821929385527,
        "bytes_recv": 62464,
        "bytes_recv_per_second": 1040.8383390691017,
        "packets_sent": 440,
        "packets_sent_per_second": 7.331724980635322,
        "packets_recv": 274,
        "packets_recv_per_second": 4.5656651015774505,
        "read_bytes": 1245171712,
        "read_bytes_per_second": 20748310.331933748,
        "write_bytes": 32776192,
        "write_bytes_per_second": 546150.0583102263,
        "read_requests": 271907,
        "read_requests_per_second": 4530.789418885473,
        "write_requests": 939,
        "write_requests_per_second": 15.64656762912856
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 60.073866844177246,
        "count_iterations": 1,
        "count_operations": 1964,
        "msecs_per_operation": 30.587508576464995,
        "operations_per_second": 32.693084417128105,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/56/05-18:09:00",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317760.993761,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/56/05",
        "bytes_sent": 78848,
        "bytes_sent_per_second": 1312.5174746037255,
        "bytes_recv": 73728,
        "bytes_recv_per_second": 1227.2890671619252,
        "packets_sent": 272,
        "packets_sent_per_second": 4.5277591453456445,
        "packets_recv": 322,
        "packets_recv_per_second": 5.3600678117694756,
        "read_bytes": 1652191232,
        "read_bytes_per_second": 27502661.61966135,
        "write_bytes": 30416896,
        "write_bytes_per_second": 506324.9229302476,
        "read_requests": 348391,
        "read_requests_per_second": 5799.3769720813025,
        "write_requests": 886,
        "write_requests_per_second": 14.748509569030297
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 60.05954027175903,
        "count_iterations": 1,
        "count_operations": 2054,
        "msecs_per_operation": 29.24028250815922,
        "operations_per_second": 34.19939597782476,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/57/05-18:09:01",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317821.05462,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/57/05",
        "bytes_sent": 201728,
        "bytes_sent_per_second": 3358.8002686536674,
        "bytes_recv": 178176,
        "bytes_recv_per_second": 2966.6560748514626,
        "packets_sent": 930,
        "packets_sent_per_second": 15.48463401138122,
        "packets_recv": 569,
        "packets_recv_per_second": 9.473931991909586,
        "read_bytes": 1983893504,
        "read_bytes_per_second": 33032112.717200715,
        "write_bytes": 314466304,
        "write_bytes_per_second": 5235909.275647039,
        "read_requests": 329842,
        "read_requests_per_second": 5491.916829658069,
        "write_requests": 2428,
        "write_requests_per_second": 40.426549870573766
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 32.959452867507935,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 3.2959452867507935,
        "operations_per_second": 303.4030947115082,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/57/05-18:09:34",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317854.015468,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/57/05",
        "bytes_sent": 81920,
        "bytes_sent_per_second": 2485.478151876675,
        "bytes_recv": 223232,
        "bytes_recv_per_second": 6772.92796386394,
        "packets_sent": 362,
        "packets_sent_per_second": 10.983192028556596,
        "packets_recv": 437,
        "packets_recv_per_second": 13.258715238892908,
        "read_bytes": 727314432,
        "read_bytes_per_second": 22066944.949714277,
        "write_bytes": 1296830464,
        "write_bytes_per_second": 39346237.60937611,
        "read_requests": 74254,
        "read_requests_per_second": 2252.889339470833,
        "write_requests": 68248,
        "write_requests_per_second": 2070.665440787101
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 29.94628620147705,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.994628620147705,
        "operations_per_second": 333.93122381588563,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/58/05-18:09:03",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317883.963249,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/58/05",
        "bytes_sent": 47104,
        "bytes_sent_per_second": 1572.9496366623475,
        "bytes_recv": 41984,
        "bytes_recv_per_second": 1401.976850068614,
        "packets_sent": 305,
        "packets_sent_per_second": 10.184902326384512,
        "packets_recv": 189,
        "packets_recv_per_second": 6.311300130120238,
        "read_bytes": 121495552,
        "read_bytes_per_second": 4057115.836754657,
        "write_bytes": 1471066112,
        "write_bytes_per_second": 49123490.70942367,
        "read_requests": 11154,
        "read_requests_per_second": 372.46688704423883,
        "write_requests": 95390,
        "write_requests_per_second": 3185.369943979733
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 16.52064609527588,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.652064609527588,
        "operations_per_second": 605.303203175542,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/58/05-18:09:20",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317900.485711,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/58/05",
        "bytes_sent": 22528,
        "bytes_sent_per_second": 1363.627056113861,
        "bytes_recv": 19456,
        "bytes_recv_per_second": 1177.6779120983344,
        "packets_sent": 108,
        "packets_sent_per_second": 6.5372745942958534,
        "packets_recv": 82,
        "packets_recv_per_second": 4.963486266039444,
        "read_bytes": 26611712,
        "read_bytes_per_second": 1610815.451558501,
        "write_bytes": 796753920,
        "write_bytes_per_second": 48227769.99186695,
        "read_requests": 230,
        "read_requests_per_second": 13.921973673037465,
        "write_requests": 90430,
        "write_requests_per_second": 5473.756866316427
    },
    {
        "dataset": "HumanBrain",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 2.757688045501709,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.27576880455017094,
        "operations_per_second": 3626.225967187195,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/58/05-18:09:23",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317903.244513,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/58/05",
        "bytes_sent": 3072,
        "bytes_sent_per_second": 1113.9766171199062,
        "bytes_recv": 3072,
        "bytes_recv_per_second": 1113.9766171199062,
        "packets_sent": 12,
        "packets_sent_per_second": 4.351471160624634,
        "packets_recv": 17,
        "packets_recv_per_second": 6.164584144218232,
        "read_bytes": 9658368,
        "read_bytes_per_second": 3502342.4842249854,
        "write_bytes": 256835584,
        "write_bytes_per_second": 93134386.3998488,
        "read_requests": 72,
        "read_requests_per_second": 26.108826963747802,
        "write_requests": 30019,
        "write_requests_per_second": 10885.56773089924
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 21.702831745147705,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.1702831745147706,
        "operations_per_second": 460.7693649118295,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/59/05-18:09:47",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599317987.018461,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/59/05",
        "bytes_sent": 19447808,
        "bytes_sent_per_second": 896095.4141087197,
        "bytes_recv": 19445760,
        "bytes_recv_per_second": 896001.0485427857,
        "packets_sent": 120066,
        "packets_sent_per_second": 5532.273456750372,
        "packets_recv": 120097,
        "packets_recv_per_second": 5533.701841781599,
        "read_bytes": 615235584,
        "read_bytes_per_second": 28348170.93108385,
        "write_bytes": 14069760,
        "write_bytes_per_second": 648291.4379661862,
        "read_requests": 35467,
        "read_requests_per_second": 1634.2107065327857,
        "write_requests": 313,
        "write_requests_per_second": 14.422081121740263
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 60.00159478187561,
        "count_iterations": 1,
        "count_operations": 7701,
        "msecs_per_operation": 7.791403036212909,
        "operations_per_second": 128.34658858644542,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/00/05-19:09:47",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318047.021662,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/00/05",
        "bytes_sent": 128739328,
        "bytes_sent_per_second": 2145598.4373083306,
        "bytes_recv": 128730112,
        "bytes_recv_per_second": 2145444.841390864,
        "packets_sent": 105299,
        "packets_sent_per_second": 1754.936687646295,
        "packets_recv": 105353,
        "packets_recv_per_second": 1755.8366637252027,
        "read_bytes": 485830656,
        "read_bytes_per_second": 8096962.385185677,
        "write_bytes": 45809664,
        "write_bytes_per_second": 763474.1070888586,
        "read_requests": 22908,
        "read_requests_per_second": 381.78985214105853,
        "write_requests": 864,
        "write_requests_per_second": 14.3996172625229
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 60.005767822265625,
        "count_iterations": 1,
        "count_operations": 4899,
        "msecs_per_operation": 12.248574774906231,
        "operations_per_second": 81.64215170965926,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/01/05-19:09:47",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318107.029577,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/01/05",
        "bytes_sent": 163577856,
        "bytes_sent_per_second": 2726035.545191426,
        "bytes_recv": 163563520,
        "bytes_recv_per_second": 2725796.634824635,
        "packets_sent": 80383,
        "packets_sent_per_second": 1339.5878915855358,
        "packets_recv": 80161,
        "packets_recv_per_second": 1335.8882472337202,
        "read_bytes": 447033344,
        "read_bytes_per_second": 7449839.57749016,
        "write_bytes": 45875200,
        "write_bytes_per_second": 764513.1737315698,
        "read_requests": 19053,
        "read_requests_per_second": 317.519476734872,
        "write_requests": 693,
        "write_requests_per_second": 11.548889800937715
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 60.009514808654785,
        "count_iterations": 1,
        "count_operations": 4653,
        "msecs_per_operation": 12.896951388062494,
        "operations_per_second": 77.53770405970567,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/02/05-19:09:47",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318167.040916,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/02/05",
        "bytes_sent": 155161600,
        "bytes_sent_per_second": 2585616.6392070553,
        "bytes_recv": 155133952,
        "bytes_recv_per_second": 2585155.9122691997,
        "packets_sent": 76245,
        "packets_sent_per_second": 1270.5485162330237,
        "packets_recv": 76279,
        "packets_recv_per_second": 1271.1150930518568,
        "read_bytes": 483127296,
        "read_bytes_per_second": 8050844.89585511,
        "write_bytes": 50520064,
        "write_bytes_per_second": 841867.5631870601,
        "read_requests": 21410,
        "read_requests_per_second": 356.77675562396274,
        "write_requests": 1134,
        "write_requests_per_second": 18.897003310489197
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 60.002485036849976,
        "count_iterations": 1,
        "count_operations": 2735,
        "msecs_per_operation": 21.938751384588656,
        "operations_per_second": 45.581445473805374,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/03/05-19:09:47",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318227.045392,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/03/05",
        "bytes_sent": 3279872,
        "bytes_sent_per_second": 54662.269370771835,
        "bytes_recv": 3276800,
        "bytes_recv_per_second": 54611.0714912488,
        "packets_sent": 33056,
        "packets_sent_per_second": 550.9105161177735,
        "packets_recv": 33177,
        "packets_recv_per_second": 552.9270992630497,
        "read_bytes": 644579328,
        "read_bytes_per_second": 10742543.87304355,
        "write_bytes": 24305664,
        "write_bytes_per_second": 405077.6227863379,
        "read_requests": 25482,
        "read_requests_per_second": 424.6824108093267,
        "write_requests": 925,
        "write_requests_per_second": 15.416028176698344
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 46.62800097465515,
        "count_iterations": 1,
        "count_operations": 9841,
        "msecs_per_operation": 4.738136467295513,
        "operations_per_second": 211.05343987080033,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/04/05-19:09:33",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318273.675378,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/04/05",
        "bytes_sent": 11172864,
        "bytes_sent_per_second": 239617.0491219012,
        "bytes_recv": 11242496,
        "bytes_recv_per_second": 241110.4007248972,
        "packets_sent": 118730,
        "packets_sent_per_second": 2546.3240438837643,
        "packets_recv": 118414,
        "packets_recv_per_second": 2539.5470001891017,
        "read_bytes": 459472896,
        "read_bytes_per_second": 9854012.318686971,
        "write_bytes": 27779072,
        "write_bytes_per_second": 595759.4453834603,
        "read_requests": 22123,
        "read_requests_per_second": 474.45739764878726,
        "write_requests": 662,
        "write_requests_per_second": 14.197477613501658
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 13.98912787437439,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.398912787437439,
        "operations_per_second": 714.8408456768941,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/04/05-19:09:47",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318287.666387,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/04/05",
        "bytes_sent": 9634816,
        "bytes_sent_per_second": 688736.001738127,
        "bytes_recv": 9629696,
        "bytes_recv_per_second": 688370.0032251404,
        "packets_sent": 120068,
        "packets_sent_per_second": 8582.95106587333,
        "packets_recv": 120072,
        "packets_recv_per_second": 8583.237002211603,
        "read_bytes": 675844096,
        "read_bytes_per_second": 48312096.5130376,
        "write_bytes": 2025402368,
        "write_bytes_per_second": 144784034.15771037,
        "read_requests": 38710,
        "read_requests_per_second": 2767.148913615257,
        "write_requests": 138152,
        "write_requests_per_second": 9875.669251195426
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 38.10666608810425,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 3.8106666088104246,
        "operations_per_second": 262.42127760218045,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/05/05-19:09:25",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318325.774613,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/05/05",
        "bytes_sent": 22822912,
        "bytes_sent_per_second": 598921.7725642135,
        "bytes_recv": 22821888,
        "bytes_recv_per_second": 598894.9006253871,
        "packets_sent": 160142,
        "packets_sent_per_second": 4202.466823776838,
        "packets_recv": 160191,
        "packets_recv_per_second": 4203.752688037089,
        "read_bytes": 1073192960,
        "read_bytes_per_second": 28162866.767686572,
        "write_bytes": 6574071808,
        "write_bytes_per_second": 172517632.29038364,
        "read_requests": 60129,
        "read_requests_per_second": 1577.9129000941507,
        "write_requests": 193379,
        "write_requests_per_second": 5074.676424143205
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 17.843208074569702,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.7843208074569703,
        "operations_per_second": 560.4373360557337,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/05/05-19:09:43",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318343.619405,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/05/05",
        "bytes_sent": 9641984,
        "bytes_sent_per_second": 540372.7827252006,
        "bytes_recv": 9633792,
        "bytes_recv_per_second": 539913.6724595039,
        "packets_sent": 120048,
        "packets_sent_per_second": 6727.938131881871,
        "packets_recv": 120051,
        "packets_recv_per_second": 6728.106263082688,
        "read_bytes": 668938240,
        "read_bytes_per_second": 37489796.5211411,
        "write_bytes": 4716298240,
        "write_bytes_per_second": 264318962.1669945,
        "read_requests": 38637,
        "read_requests_per_second": 2165.361735318538,
        "write_requests": 214531,
        "write_requests_per_second": 12023.11821413726
    },
    {
        "dataset": "HumanBrain",
        "database": "MySQL",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 4.421798944473267,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.44217989444732664,
        "operations_per_second": 2261.5229967655664,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/05/05-19:09:48",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318348.042834,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/05/05",
        "bytes_sent": 998400,
        "bytes_sent_per_second": 225790.45599707414,
        "bytes_recv": 999424,
        "bytes_recv_per_second": 226022.03595194293,
        "packets_sent": 1630,
        "packets_sent_per_second": 368.62824847278733,
        "packets_recv": 1651,
        "packets_recv_per_second": 373.377446765995,
        "read_bytes": 2994176,
        "read_bytes_per_second": 677139.7880363537,
        "write_bytes": 1737199616,
        "write_bytes_per_second": 392871688.1556311,
        "read_requests": 163,
        "read_requests_per_second": 36.86282484727873,
        "write_requests": 59056,
        "write_requests_per_second": 13355.650209698728
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 30.028931140899658,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 3.0028931140899657,
        "operations_per_second": 333.01218591759715,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/07/05-19:09:57",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318477.831087,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/07/05",
        "bytes_sent": 15171584,
        "bytes_sent_per_second": 505232.2351672442,
        "bytes_recv": 15168512,
        "bytes_recv_per_second": 505129.93382373033,
        "packets_sent": 120523,
        "packets_sent_per_second": 4013.562768334656,
        "packets_recv": 120317,
        "packets_recv_per_second": 4006.7027173047536,
        "read_bytes": 530706432,
        "read_bytes_per_second": 17673170.900084864,
        "write_bytes": 19877888,
        "write_bytes_per_second": 661957.8934305174,
        "read_requests": 60131,
        "read_requests_per_second": 2002.4355751411035,
        "write_requests": 558,
        "write_requests_per_second": 18.58207997420192
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 60.101929903030396,
        "count_iterations": 1,
        "count_operations": 1065,
        "msecs_per_operation": 56.43373699815061,
        "operations_per_second": 17.719896877160043,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(None, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/08/05-19:09:57",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318537.935115,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/08/05",
        "bytes_sent": 23185408,
        "bytes_sent_per_second": 385768.11156326893,
        "bytes_recv": 23171072,
        "bytes_recv_per_second": 385529.5834490615,
        "packets_sent": 17640,
        "packets_sent_per_second": 293.5013905287353,
        "packets_recv": 17649,
        "packets_recv_per_second": 293.65113613614795,
        "read_bytes": 1962504192,
        "read_bytes_per_second": 32652931.36453924,
        "write_bytes": 28020736,
        "write_bytes_per_second": 466220.2369409633,
        "read_requests": 227637,
        "read_requests_per_second": 3787.5156482873995,
        "write_requests": 730,
        "write_requests_per_second": 12.14603260124585
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 60.04023194313049,
        "count_iterations": 1,
        "count_operations": 1234,
        "msecs_per_operation": 48.654969159749186,
        "operations_per_second": 20.552885291463106,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.gdb.has_edge(v, v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/09/05-19:09:57",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318597.977455,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/09/05",
        "bytes_sent": 57282560,
        "bytes_sent_per_second": 954069.5987693297,
        "bytes_recv": 57266176,
        "bytes_recv_per_second": 953796.7150800142,
        "packets_sent": 27536,
        "packets_sent_per_second": 458.6258098749822,
        "packets_recv": 27602,
        "packets_recv_per_second": 459.72507278360183,
        "read_bytes": 2458226688,
        "read_bytes_per_second": 40942991.19844186,
        "write_bytes": 167510016,
        "write_bytes_per_second": 2789962.839561709,
        "read_requests": 269030,
        "read_requests_per_second": 4480.828792514035,
        "write_requests": 1320,
        "write_requests_per_second": 21.985258172391653
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 60.038249015808105,
        "count_iterations": 1,
        "count_operations": 1300,
        "msecs_per_operation": 46.18326847369855,
        "operations_per_second": 21.652863321475436,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.gdb.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/10/05-19:09:58",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318658.017803,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/10/05",
        "bytes_sent": 60481536,
        "bytes_sent_per_second": 1007383.4096006893,
        "bytes_recv": 60477440,
        "bytes_recv_per_second": 1007315.186425178,
        "packets_sent": 29216,
        "packets_sent_per_second": 486.62311907709716,
        "packets_recv": 29071,
        "packets_recv_per_second": 484.2079920143172,
        "read_bytes": 2304708608,
        "read_bytes_per_second": 38387338.83450147,
        "write_bytes": 175751168,
        "write_bytes_per_second": 2927320.0148412827,
        "read_requests": 265677,
        "read_requests_per_second": 4425.129052815099,
        "write_requests": 2753,
        "write_requests_per_second": 45.854102095401444
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 60.18382501602173,
        "count_iterations": 1,
        "count_operations": 1638,
        "msecs_per_operation": 36.742261914543185,
        "operations_per_second": 27.216615088255736,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(v, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/11/05-19:09:58",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318718.20323,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/11/05",
        "bytes_sent": 1804288,
        "bytes_sent_per_second": 29979.616608277636,
        "bytes_recv": 1790976,
        "bytes_recv_per_second": 29758.427609465143,
        "packets_sent": 20280,
        "packets_sent_per_second": 336.96761537840433,
        "packets_recv": 20241,
        "packets_recv_per_second": 336.3196007334459,
        "read_bytes": 2882101248,
        "read_bytes_per_second": 47888302.998899564,
        "write_bytes": 191533056,
        "write_bytes_per_second": 3182467.3149141213,
        "read_requests": 334625,
        "read_requests_per_second": 5560.048732544307,
        "write_requests": 1313,
        "write_requests_per_second": 21.816493046935154
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 60.002673864364624,
        "count_iterations": 1,
        "count_operations": 1697,
        "msecs_per_operation": 35.35808713280178,
        "operations_per_second": 28.282072959549264,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.gdb.number_of_edges(None, v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/12/05-19:09:58",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318778.207993,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/12/05",
        "bytes_sent": 1849344,
        "bytes_sent_per_second": 30821.026479260265,
        "bytes_recv": 1849344,
        "bytes_recv_per_second": 30821.026479260265,
        "packets_sent": 21313,
        "packets_sent_per_second": 355.20083735231196,
        "packets_recv": 21151,
        "packets_recv_per_second": 352.50095767084645,
        "read_bytes": 2481500160,
        "read_bytes_per_second": 41356492.97245325,
        "write_bytes": 741265408,
        "write_bytes_per_second": 12353872.923657073,
        "read_requests": 270145,
        "read_requests_per_second": 4502.216028083344,
        "write_requests": 3696,
        "write_requests_per_second": 61.597254954916956
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 14.70626711845398,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.470626711845398,
        "operations_per_second": 679.982208908175,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/13/05-19:09:12",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318792.916302,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/13/05",
        "bytes_sent": 8144896,
        "bytes_sent_per_second": 553838.4373407359,
        "bytes_recv": 8137728,
        "bytes_recv_per_second": 553351.0260933905,
        "packets_sent": 120163,
        "packets_sent_per_second": 8170.870216903304,
        "packets_recv": 120193,
        "packets_recv_per_second": 8172.9101635300285,
        "read_bytes": 317964288,
        "read_bytes_per_second": 21621005.890815515,
        "write_bytes": 176803840,
        "write_bytes_per_second": 12022346.566664757,
        "read_requests": 22415,
        "read_requests_per_second": 1524.1801212676744,
        "write_requests": 10376,
        "write_requests_per_second": 705.5495399631225
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 25.36452007293701,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.536452007293701,
        "operations_per_second": 394.2514966277491,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/13/05-19:09:38",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318818.28234,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/13/05",
        "bytes_sent": 17797120,
        "bytes_sent_per_second": 701654.1195663646,
        "bytes_recv": 17787904,
        "bytes_recv_per_second": 701290.7773870724,
        "packets_sent": 160370,
        "packets_sent_per_second": 6322.611251419212,
        "packets_recv": 160303,
        "packets_recv_per_second": 6319.969766391806,
        "read_bytes": 398004224,
        "read_bytes_per_second": 15691376.097616589,
        "write_bytes": 669450240,
        "write_bytes_per_second": 26393175.90378058,
        "read_requests": 33777,
        "read_requests_per_second": 1331.663280159548,
        "write_requests": 42905,
        "write_requests_per_second": 1691.5360462813574
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 8.878719806671143,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.8878719806671143,
        "operations_per_second": 1126.2884985385358,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/13/05-19:09:47",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318827.162443,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/13/05",
        "bytes_sent": 8123392,
        "bytes_sent_per_second": 914928.2978719954,
        "bytes_recv": 8121344,
        "bytes_recv_per_second": 914697.6339874946,
        "packets_sent": 120093,
        "packets_sent_per_second": 13525.936465498839,
        "packets_recv": 120100,
        "packets_recv_per_second": 13526.724867447814,
        "read_bytes": 32067584,
        "read_bytes_per_second": 3611735.1035118373,
        "write_bytes": 240955392,
        "write_bytes_per_second": 27138528.66704443,
        "read_requests": 1422,
        "read_requests_per_second": 160.15822449217978,
        "write_requests": 10601,
        "write_requests_per_second": 1193.978437300702
    },
    {
        "dataset": "HumanBrain",
        "database": "PostgreSQL",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 3.994781255722046,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.3994781255722046,
        "operations_per_second": 2503.2659762474345,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/13/05-19:09:51",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318831.158566,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/13/05",
        "bytes_sent": 4238336,
        "bytes_sent_per_second": 1060968.2304704648,
        "bytes_recv": 4236288,
        "bytes_recv_per_second": 1060455.5615985293,
        "packets_sent": 41242,
        "packets_sent_per_second": 10323.96953923967,
        "packets_recv": 41245,
        "packets_recv_per_second": 10324.720519032544,
        "read_bytes": 74219520,
        "read_bytes_per_second": 18579119.9189416,
        "write_bytes": 63393792,
        "write_bytes_per_second": 15869152.261890681,
        "read_requests": 5169,
        "read_requests_per_second": 1293.938183122299,
        "write_requests": 6807,
        "write_requests_per_second": 1703.9731500316288
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 32.47554898262024,
        "count_iterations": 1,
        "count_operations": 20000,
        "msecs_per_operation": 1.623777449131012,
        "operations_per_second": 615.8479418070281,
        "benchmark_code": "    def find_e(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query:\n            match = self.gdb.has_edge(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} undirected matches')\n        return cnt\n",
        "date": "2020/23/05-19:09:39",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319419.899091,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/23/05",
        "bytes_sent": 13214720,
        "bytes_sent_per_second": 406912.9056778085,
        "bytes_recv": 13208576,
        "bytes_recv_per_second": 406723.7171900854,
        "packets_sent": 80158,
        "packets_sent_per_second": 2468.256965968388,
        "packets_recv": 80191,
        "packets_recv_per_second": 2469.2731150723694,
        "read_bytes": 297517056,
        "read_bytes_per_second": 9161263.329504317,
        "write_bytes": 25686016,
        "write_bytes_per_second": 790934.0043411197,
        "read_requests": 15921,
        "read_requests_per_second": 490.24575407548474,
        "write_requests": 598,
        "write_requests_per_second": 18.41385346003014
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 14.522772073745728,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.4522772073745727,
        "operations_per_second": 688.5737756690407,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/25/05-19:09:48",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319548.720012,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/25/05",
        "bytes_sent": 4730880,
        "bytes_sent_per_second": 325755.99038371514,
        "bytes_recv": 4727808,
        "bytes_recv_per_second": 325544.4605198296,
        "packets_sent": 40098,
        "packets_sent_per_second": 2761.0431256777197,
        "packets_recv": 40106,
        "packets_recv_per_second": 2761.5939846982546,
        "read_bytes": 386293760,
        "read_bytes_per_second": 26599175.284059025,
        "write_bytes": 270901248,
        "write_bytes_per_second": 18653549.516881518,
        "read_requests": 22764,
        "read_requests_per_second": 1567.4693429330043,
        "write_requests": 3477,
        "write_requests_per_second": 239.41710180012547
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 4.964082956314087,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.4964082956314087,
        "operations_per_second": 2014.4707669078045,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/25/05-19:09:53",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319553.689794,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/25/05",
        "bytes_sent": 6416384,
        "bytes_sent_per_second": 1292561.7997254967,
        "bytes_recv": 6411264,
        "bytes_recv_per_second": 1291530.3906928399,
        "packets_sent": 40038,
        "packets_sent_per_second": 8065.538056545468,
        "packets_recv": 40035,
        "packets_recv_per_second": 8064.933715315396,
        "read_bytes": 62722048,
        "read_bytes_per_second": 12635173.213658813,
        "write_bytes": 16637952,
        "write_bytes_per_second": 3351666.792521524,
        "read_requests": 3448,
        "read_requests_per_second": 694.5895204298109,
        "write_requests": 1140,
        "write_requests_per_second": 229.6496674274897
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 1.1372780799865723,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.11372780799865723,
        "operations_per_second": 8792.924242519533,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/25/05-19:09:54",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319554.828287,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/25/05",
        "bytes_sent": 128000,
        "bytes_sent_per_second": 112549.43030425003,
        "bytes_recv": 126976,
        "bytes_recv_per_second": 111649.03486181602,
        "packets_sent": 402,
        "packets_sent_per_second": 353.4755545492852,
        "packets_recv": 402,
        "packets_recv_per_second": 353.4755545492852,
        "read_bytes": 10457088,
        "read_bytes_per_second": 9194838.25813601,
        "write_bytes": 2617344,
        "write_bytes_per_second": 2301410.7508613043,
        "read_requests": 56,
        "read_requests_per_second": 49.24037575810939,
        "write_requests": 272,
        "write_requests_per_second": 239.1675393965313
    },
    {
        "dataset": "PatentCitations",
        "database": "MongoDB",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 1.9188838005065918,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.1918883800506592,
        "operations_per_second": 5211.362979540484,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/25/05-19:09:56",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319556.748478,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/25/05",
        "bytes_sent": 1784832,
        "bytes_sent_per_second": 930140.7409499201,
        "bytes_recv": 1785856,
        "bytes_recv_per_second": 930674.3845190251,
        "packets_sent": 409,
        "packets_sent_per_second": 213.1447458632058,
        "packets_recv": 413,
        "packets_recv_per_second": 215.229291055022,
        "read_bytes": 17178624,
        "read_bytes_per_second": 8952404.515304567,
        "write_bytes": 4788224,
        "write_bytes_per_second": 2495317.3291347255,
        "read_requests": 126,
        "read_requests_per_second": 65.6631735422101,
        "write_requests": 464,
        "write_requests_per_second": 241.80724225067846
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 27.917782068252563,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.7917782068252563,
        "operations_per_second": 358.19464367019907,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/31/05-19:09:41",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319901.077889,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/31/05",
        "bytes_sent": 50176,
        "bytes_sent_per_second": 1797.2774440795909,
        "bytes_recv": 75776,
        "bytes_recv_per_second": 2714.2557318753006,
        "packets_sent": 149,
        "packets_sent_per_second": 5.337100190685966,
        "packets_recv": 185,
        "packets_recv_per_second": 6.626600907898682,
        "read_bytes": 399589376,
        "read_bytes_per_second": 14313077.41507172,
        "write_bytes": 605859840,
        "write_bytes_per_second": 21701574.95028838,
        "read_requests": 55837,
        "read_requests_per_second": 2000.0514318612904,
        "write_requests": 62054,
        "write_requests_per_second": 2222.7410418310533
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 22.563986778259277,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 2.2563986778259277,
        "operations_per_second": 443.1840923446712,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.gdb.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/32/05-19:09:03",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319923.647104,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/32/05",
        "bytes_sent": 36864,
        "bytes_sent_per_second": 1633.753838019396,
        "bytes_recv": 33792,
        "bytes_recv_per_second": 1497.607684851113,
        "packets_sent": 254,
        "packets_sent_per_second": 11.256875945554649,
        "packets_recv": 125,
        "packets_recv_per_second": 5.53980115430839,
        "read_bytes": 37863424,
        "read_bytes_per_second": 1678046.719850144,
        "write_bytes": 608870400,
        "write_bytes_per_second": 26984167.55795369,
        "read_requests": 1030,
        "read_requests_per_second": 45.64796151150114,
        "write_requests": 90618,
        "write_requests_per_second": 4016.0456080089416
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 17.18258309364319,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 1.718258309364319,
        "operations_per_second": 581.9846728225377,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/32/05-19:09:20",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319940.83101,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/32/05",
        "bytes_sent": 32768,
        "bytes_sent_per_second": 1907.0473759048919,
        "bytes_recv": 32768,
        "bytes_recv_per_second": 1907.0473759048919,
        "packets_sent": 120,
        "packets_sent_per_second": 6.983816073870453,
        "packets_recv": 146,
        "packets_recv_per_second": 8.496976223209051,
        "read_bytes": 14831616,
        "read_bytes_per_second": 863177.3185189517,
        "write_bytes": 599896064,
        "write_bytes_per_second": 34913031.45345682,
        "read_requests": 292,
        "read_requests_per_second": 16.993952446418103,
        "write_requests": 89164,
        "write_requests_per_second": 5189.208136754876
    },
    {
        "dataset": "PatentCitations",
        "database": "SQLite",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 2.6605100631713867,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.2660510063171387,
        "operations_per_second": 3758.6777582339905,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.gdb.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/32/05-19:09:23",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319943.492679,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/32/05",
        "bytes_sent": 2048,
        "bytes_sent_per_second": 769.7772048863212,
        "bytes_recv": 2048,
        "bytes_recv_per_second": 769.7772048863212,
        "packets_sent": 4,
        "packets_sent_per_second": 1.5034711032935961,
        "packets_recv": 8,
        "packets_recv_per_second": 3.0069422065871922,
        "read_bytes": 5074944,
        "read_bytes_per_second": 1907507.913708304,
        "write_bytes": 256126976,
        "write_bytes_per_second": 96269876.7974931,
        "read_requests": 35,
        "read_requests_per_second": 13.155372153818966,
        "write_requests": 29467,
        "write_requests_per_second": 11075.695750188099
    }
]