[
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 65.21522116661072,
        "count_iterations": 1,
        "count_operations": 16518947,
        "msecs_per_operation": 0.003947904256040698,
        "operations_per_second": 253298.9493019993,
        "benchmark_code": "        def import_one() -> int:\n            g.add_stream(dataset_path)\n            return g.number_of_edges()\n",
        "date": "2020/42/31-06:08:30",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874150.89894,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/42/31",
        "bytes_sent": 263168,
        "bytes_sent_per_second": 4035.3769456314953,
        "bytes_recv": 2051072,
        "bytes_recv_per_second": 31450.817206614338,
        "packets_sent": 1330,
        "packets_sent_per_second": 20.394011953162575,
        "packets_recv": 1751,
        "packets_recv_per_second": 26.84956009773509,
        "read_bytes": 962383872,
        "read_bytes_per_second": 14757043.751202168,
        "write_bytes": 1184444416,
        "write_bytes_per_second": 18162085.396812532,
        "read_requests": 6421,
        "read_requests_per_second": 98.4586095874112,
        "write_requests": 3654,
        "write_requests_per_second": 56.02986441868876
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 13.684103965759277,
        "count_iterations": 1,
        "count_operations": 14461095,
        "msecs_per_operation": 0.0009462702489513608,
        "operations_per_second": 1056780.5561975362,
        "benchmark_code": "        def import_one() -> int:\n            g.add_stream(dataset_path)\n            return g.number_of_edges()\n",
        "date": "2020/42/31-06:08:44",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874164.606944,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/42/31",
        "bytes_sent": 20480,
        "bytes_sent_per_second": 1496.6270390261277,
        "bytes_recv": 516096,
        "bytes_recv_per_second": 37715.00138345842,
        "packets_sent": 269,
        "packets_sent_per_second": 19.657845385645917,
        "packets_recv": 386,
        "packets_recv_per_second": 28.20791196601979,
        "read_bytes": 304816128,
        "read_bytes_per_second": 22275198.198049277,
        "write_bytes": 795652096,
        "write_bytes_per_second": 58144259.79157287,
        "read_requests": 837,
        "read_requests_per_second": 61.16586092113618,
        "write_requests": 963,
        "write_requests_per_second": 70.37362493076958
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 106.51182007789612,
        "count_iterations": 1,
        "count_operations": 87273967,
        "msecs_per_operation": 0.001220430601921603,
        "operations_per_second": 819382.9279808875,
        "benchmark_code": "        def import_one() -> int:\n            g.add_stream(dataset_path)\n            return g.number_of_edges()\n",
        "date": "2020/44/31-06:08:31",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874271.142883,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/44/31",
        "bytes_sent": 216064,
        "bytes_sent_per_second": 2028.5448116648859,
        "bytes_recv": 1317888,
        "bytes_recv_per_second": 12373.161955510466,
        "packets_sent": 1668,
        "packets_sent_per_second": 15.660233754151685,
        "packets_recv": 1284,
        "packets_recv_per_second": 12.055000084131153,
        "read_bytes": 8220602368,
        "read_bytes_per_second": 77180188.65876071,
        "write_bytes": 5263470592,
        "write_bytes_per_second": 49416774.47771172,
        "read_requests": 25770,
        "read_requests_per_second": 241.94497832403414,
        "write_requests": 10557,
        "write_requests_per_second": 99.11576003751759
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 0.9325029850006104,
        "count_iterations": 1,
        "count_operations": 20000,
        "msecs_per_operation": 0.046625149250030515,
        "operations_per_second": 21447.652524122386,
        "benchmark_code": "    def find_e_directed(self) -> int:\n        # Try both existing and potentially missing edges\n        half = int(len(self.tasks.edges_to_query) / 2)\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query[:half]:\n            match = self.g.edge_directed(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        t0 = time()\n        for e in self.tasks.edges_to_query[half:]:\n            match = self.g.edge_directed(e.second, e.first)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} directed matches')\n        return cnt\n",
        "date": "2020/46/31-06:08:28",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874388.333186,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 1024,
        "bytes_sent_per_second": 1098.1198092350662,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 7,
        "packets_sent_per_second": 7.506678383442835,
        "packets_recv": 6,
        "packets_recv_per_second": 6.434295757236716,
        "read_bytes": 60358656,
        "read_bytes_per_second": 64727574.03555174,
        "write_bytes": 2052096,
        "write_bytes_per_second": 2200632.0977070727,
        "read_requests": 1487,
        "read_requests_per_second": 1594.6329651684994,
        "write_requests": 307,
        "write_requests_per_second": 329.22146624527863
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 0.5889990329742432,
        "count_iterations": 1,
        "count_operations": 19878,
        "msecs_per_operation": 0.029630698912075818,
        "operations_per_second": 33748.78206441684,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.g.edges_to(v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/46/31-06:08:29",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874389.350111,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 1,
        "packets_sent_per_second": 1.697795656726876,
        "packets_recv": 0,
        "packets_recv_per_second": 0.0,
        "read_bytes": 1196032,
        "read_bytes_per_second": 2030617.9349063588,
        "write_bytes": 4096,
        "write_bytes_per_second": 6954.171009953284,
        "read_requests": 124,
        "read_requests_per_second": 210.52666143413262,
        "write_requests": 1,
        "write_requests_per_second": 1.697795656726876
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 0.5946760177612305,
        "count_iterations": 1,
        "count_operations": 19878,
        "msecs_per_operation": 0.029916290258639223,
        "operations_per_second": 33426.604413667905,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.g.edges_related(v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/46/31-06:08:29",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874389.954413,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 0,
        "packets_sent_per_second": 0.0,
        "packets_recv": 1,
        "packets_recv_per_second": 1.6815879069155804,
        "read_bytes": 0,
        "read_bytes_per_second": 0.0,
        "write_bytes": 0,
        "write_bytes_per_second": 0.0,
        "read_requests": 0,
        "read_requests_per_second": 0.0,
        "write_requests": 0,
        "write_requests_per_second": 0.0
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 0.43576812744140625,
        "count_iterations": 1,
        "count_operations": 19878,
        "msecs_per_operation": 0.02192213137344835,
        "operations_per_second": 45616.002521140814,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.g.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/46/31-06:08:30",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874390.392026,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 22528,
        "bytes_sent_per_second": 51697.218271267746,
        "bytes_recv": 320512,
        "bytes_recv_per_second": 735510.423586673,
        "packets_sent": 281,
        "packets_sent_per_second": 644.8383493530823,
        "packets_recv": 216,
        "packets_recv_per_second": 495.67645359525187,
        "read_bytes": 4096,
        "read_bytes_per_second": 9399.49423113959,
        "write_bytes": 73728,
        "write_bytes_per_second": 169190.89616051264,
        "read_requests": 1,
        "read_requests_per_second": 2.294798396274314,
        "write_requests": 18,
        "write_requests_per_second": 41.306371132937656
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 0.5324199199676514,
        "count_iterations": 1,
        "count_operations": 19878,
        "msecs_per_operation": 0.02678438072077932,
        "operations_per_second": 37335.192119047206,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.g.number_of_neighbors(v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/46/31-06:08:30",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874390.926129,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 2048,
        "bytes_sent_per_second": 3846.587858929906,
        "bytes_recv": 163840,
        "bytes_recv_per_second": 307727.0287143925,
        "packets_sent": 17,
        "packets_sent_per_second": 31.92968437588301,
        "packets_recv": 111,
        "packets_recv_per_second": 208.48205680723612,
        "read_bytes": 0,
        "read_bytes_per_second": 0.0,
        "write_bytes": 45056,
        "write_bytes_per_second": 84624.93289645793,
        "read_requests": 0,
        "read_requests_per_second": 0.0,
        "write_requests": 11,
        "write_requests_per_second": 20.6603840079243
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 0.48134922981262207,
        "count_iterations": 1,
        "count_operations": 19878,
        "msecs_per_operation": 0.024215174052350442,
        "operations_per_second": 41296.42008098369,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.g.number_of_predecessors(v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/46/31-06:08:31",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874391.40919,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 18432,
        "bytes_sent_per_second": 38292.364168059736,
        "bytes_recv": 26624,
        "bytes_recv_per_second": 55311.19268719739,
        "packets_sent": 30,
        "packets_sent_per_second": 62.32481147145139,
        "packets_recv": 22,
        "packets_recv_per_second": 45.70486174573102,
        "read_bytes": 5267456,
        "read_bytes_per_second": 10943106.737805516,
        "write_bytes": 847872,
        "write_bytes_per_second": 1761448.7517307478,
        "read_requests": 32,
        "read_requests_per_second": 66.47979890288148,
        "write_requests": 89,
        "write_requests_per_second": 184.89694069863913
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 1.714576244354248,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.1714576244354248,
        "operations_per_second": 5832.344891589378,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.g.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/46/31-06:08:33",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874393.125648,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 1024,
        "bytes_sent_per_second": 597.2321168987523,
        "bytes_recv": 2048,
        "bytes_recv_per_second": 1194.4642337975047,
        "packets_sent": 6,
        "packets_sent_per_second": 3.499406934953627,
        "packets_recv": 9,
        "packets_recv_per_second": 5.24911040243044,
        "read_bytes": 2879488,
        "read_bytes_per_second": 1679416.7127192914,
        "write_bytes": 46485504,
        "write_bytes_per_second": 27111949.17873576,
        "read_requests": 15,
        "read_requests_per_second": 8.748517337384067,
        "write_requests": 10036,
        "write_requests_per_second": 5853.3413331991
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 1.4821758270263672,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.1482175827026367,
        "operations_per_second": 6746.837870148387,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.g.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/46/31-06:08:34",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874394.609317,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 11264,
        "bytes_sent_per_second": 7599.638176935144,
        "bytes_recv": 4096,
        "bytes_recv_per_second": 2763.5047916127796,
        "packets_sent": 21,
        "packets_sent_per_second": 14.168359527311614,
        "packets_recv": 21,
        "packets_recv_per_second": 14.168359527311614,
        "read_bytes": 1384448,
        "read_bytes_per_second": 934064.6195651195,
        "write_bytes": 46845952,
        "write_bytes_per_second": 31606204.30167536,
        "read_requests": 13,
        "read_requests_per_second": 8.770889231192903,
        "write_requests": 10018,
        "write_requests_per_second": 6758.982178314654
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 0.3450632095336914,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.03450632095336914,
        "operations_per_second": 28980.197609341532,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.g.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/46/31-06:08:34",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874394.955699,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 4096,
        "bytes_sent_per_second": 11870.288940786291,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 3,
        "packets_sent_per_second": 8.69405928280246,
        "packets_recv": 2,
        "packets_recv_per_second": 5.796039521868306,
        "read_bytes": 4096,
        "read_bytes_per_second": 11870.288940786291,
        "write_bytes": 5251072,
        "write_bytes_per_second": 15217710.422088025,
        "read_requests": 1,
        "read_requests_per_second": 2.898019760934153,
        "write_requests": 105,
        "write_requests_per_second": 304.29207489808607
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "PatentCitations",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 0.3487510681152344,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.03487510681152344,
        "operations_per_second": 28673.74730647649,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.g.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/46/31-06:08:35",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874395.305916,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 1024,
        "bytes_sent_per_second": 2936.1917241831925,
        "bytes_recv": 3072,
        "bytes_recv_per_second": 8808.575172549577,
        "packets_sent": 5,
        "packets_sent_per_second": 14.336873653238245,
        "packets_recv": 6,
        "packets_recv_per_second": 17.204248383885894,
        "read_bytes": 0,
        "read_bytes_per_second": 0.0,
        "write_bytes": 5611520,
        "write_bytes_per_second": 16090330.648523895,
        "read_requests": 0,
        "read_requests_per_second": 0.0,
        "write_requests": 105,
        "write_requests_per_second": 301.07434671800314
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 0.2916080951690674,
        "count_iterations": 1,
        "count_operations": 20000,
        "msecs_per_operation": 0.014580404758453368,
        "operations_per_second": 68585.2016159033,
        "benchmark_code": "    def find_e_directed(self) -> int:\n        # Try both existing and potentially missing edges\n        half = int(len(self.tasks.edges_to_query) / 2)\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query[:half]:\n            match = self.g.edge_directed(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        t0 = time()\n        for e in self.tasks.edges_to_query[half:]:\n            match = self.g.edge_directed(e.second, e.first)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} directed matches')\n        return cnt\n",
        "date": "2020/46/31-06:08:40",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874400.362584,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 1,
        "packets_sent_per_second": 3.4292600807951645,
        "packets_recv": 1,
        "packets_recv_per_second": 3.4292600807951645,
        "read_bytes": 1871872,
        "read_bytes_per_second": 6419135.925958206,
        "write_bytes": 0,
        "write_bytes_per_second": 0.0,
        "read_requests": 91,
        "read_requests_per_second": 312.06266735235994,
        "write_requests": 0,
        "write_requests_per_second": 0.0
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 1.0476198196411133,
        "count_iterations": 1,
        "count_operations": 12234,
        "msecs_per_operation": 0.08563183093355511,
        "operations_per_second": 11677.900485112094,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.g.edges_to(v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/46/31-06:08:41",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874401.683808,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 6144,
        "bytes_sent_per_second": 5864.722950836088,
        "bytes_recv": 3072,
        "bytes_recv_per_second": 2932.361475418044,
        "packets_sent": 7,
        "packets_sent_per_second": 6.681813257788511,
        "packets_recv": 10,
        "packets_recv_per_second": 9.545447511126445,
        "read_bytes": 16384,
        "read_bytes_per_second": 15639.261202229567,
        "write_bytes": 2285568,
        "write_bytes_per_second": 2181676.9377110247,
        "read_requests": 3,
        "read_requests_per_second": 2.8636342533379335,
        "write_requests": 6,
        "write_requests_per_second": 5.727268506675867
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 1.388685941696167,
        "count_iterations": 1,
        "count_operations": 12234,
        "msecs_per_operation": 0.11351037613995153,
        "operations_per_second": 8809.767300630381,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.g.edges_related(v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/46/31-06:08:43",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874403.074332,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 2048,
        "bytes_sent_per_second": 1474.7754971138647,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 7,
        "packets_sent_per_second": 5.040736562400904,
        "packets_recv": 6,
        "packets_recv_per_second": 4.320631339200776,
        "read_bytes": 3297280,
        "read_bytes_per_second": 2374388.550353322,
        "write_bytes": 0,
        "write_bytes_per_second": 0.0,
        "read_requests": 28,
        "read_requests_per_second": 20.162946249603618,
        "write_requests": 0,
        "write_requests_per_second": 0.0
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 1.1869807243347168,
        "count_iterations": 1,
        "count_operations": 12234,
        "msecs_per_operation": 0.09702310972165415,
        "operations_per_second": 10306.822806121772,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.g.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/46/31-06:08:44",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874404.263762,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 1024,
        "bytes_sent_per_second": 862.693031998422,
        "bytes_recv": 1024,
        "bytes_recv_per_second": 862.693031998422,
        "packets_sent": 5,
        "packets_sent_per_second": 4.212368320304795,
        "packets_recv": 5,
        "packets_recv_per_second": 4.212368320304795,
        "read_bytes": 2093056,
        "read_bytes_per_second": 1763344.5574047747,
        "write_bytes": 20480,
        "write_bytes_per_second": 17253.86063996844,
        "read_requests": 9,
        "read_requests_per_second": 7.582262976548631,
        "write_requests": 3,
        "write_requests_per_second": 2.527420992182877
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 1.3949699401855469,
        "count_iterations": 1,
        "count_operations": 12234,
        "msecs_per_operation": 0.11402402649873687,
        "operations_per_second": 8770.081453061804,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.g.number_of_neighbors(v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/46/31-06:08:45",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874405.661055,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 41984,
        "bytes_sent_per_second": 30096.705879135756,
        "bytes_recv": 512000,
        "bytes_recv_per_second": 367032.99852604576,
        "packets_sent": 712,
        "packets_sent_per_second": 510.4052635752824,
        "packets_recv": 358,
        "packets_recv_per_second": 256.6363544381336,
        "read_bytes": 2916352,
        "read_bytes_per_second": 2090619.9596043567,
        "write_bytes": 1363968,
        "write_bytes_per_second": 977775.908073386,
        "read_requests": 47,
        "read_requests_per_second": 33.69248228657061,
        "write_requests": 201,
        "write_requests_per_second": 144.08912637448282
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 1.0224978923797607,
        "count_iterations": 1,
        "count_operations": 12234,
        "msecs_per_operation": 0.08357837930192584,
        "operations_per_second": 11964.816838425553,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.g.number_of_predecessors(v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/46/31-06:08:46",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874406.684872,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 2,
        "packets_sent_per_second": 1.9559942518269662,
        "packets_recv": 3,
        "packets_recv_per_second": 2.9339913777404494,
        "read_bytes": 0,
        "read_bytes_per_second": 0.0,
        "write_bytes": 0,
        "write_bytes_per_second": 0.0,
        "read_requests": 0,
        "read_requests_per_second": 0.0,
        "write_requests": 0,
        "write_requests_per_second": 0.0
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 1.6991379261016846,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.16991379261016848,
        "operations_per_second": 5885.337409272537,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.g.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/46/31-06:08:48",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874408.385233,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 2048,
        "bytes_sent_per_second": 1205.3171014190157,
        "bytes_recv": 1024,
        "bytes_recv_per_second": 602.6585507095078,
        "packets_sent": 4,
        "packets_sent_per_second": 2.354134963709015,
        "packets_recv": 5,
        "packets_recv_per_second": 2.9426687046362687,
        "read_bytes": 790528,
        "read_bytes_per_second": 465252.40114774,
        "write_bytes": 59092992,
        "write_bytes_per_second": 34778219.64434428,
        "read_requests": 4,
        "read_requests_per_second": 2.354134963709015,
        "write_requests": 10048,
        "write_requests_per_second": 5913.587028837045
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 1.6595940589904785,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.16595940589904784,
        "operations_per_second": 6025.569895136249,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.g.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/46/31-06:08:50",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874410.045921,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 2048,
        "bytes_sent_per_second": 1234.0367145239038,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 5,
        "packets_sent_per_second": 3.0127849475681248,
        "packets_recv": 6,
        "packets_recv_per_second": 3.6153419370817494,
        "read_bytes": 1830912,
        "read_bytes_per_second": 1103228.82278437,
        "write_bytes": 59273216,
        "write_bytes_per_second": 35715490.59175082,
        "read_requests": 7,
        "read_requests_per_second": 4.217898926595375,
        "write_requests": 10018,
        "write_requests_per_second": 6036.415920947495
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 0.4830811023712158,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.04830811023712158,
        "operations_per_second": 20700.457854622644,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.g.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/46/31-06:08:50",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874410.530576,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 0,
        "packets_sent_per_second": 0.0,
        "packets_recv": 0,
        "packets_recv_per_second": 0.0,
        "read_bytes": 8593408,
        "read_bytes_per_second": 17788748.013157707,
        "write_bytes": 18366464,
        "write_bytes_per_second": 38019421.397044405,
        "read_requests": 60,
        "read_requests_per_second": 124.20274712773586,
        "write_requests": 125,
        "write_requests_per_second": 258.7557231827831
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "MouseGenes",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 0.4939560890197754,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.04939560890197754,
        "operations_per_second": 20244.714504571384,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.g.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/46/31-06:08:51",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874411.025993,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/46/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 0,
        "packets_sent_per_second": 0.0,
        "packets_recv": 0,
        "packets_recv_per_second": 0.0,
        "read_bytes": 4096,
        "read_bytes_per_second": 8292.235061072439,
        "write_bytes": 36147200,
        "write_bytes_per_second": 73178974.41396427,
        "read_requests": 1,
        "read_requests_per_second": 2.0244714504571384,
        "write_requests": 174,
        "write_requests_per_second": 352.25803237954204
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Reads: Find Specific Edge",
        "time_elapsed": 0.5398261547088623,
        "count_iterations": 1,
        "count_operations": 20000,
        "msecs_per_operation": 0.026991307735443115,
        "operations_per_second": 37048.96442223395,
        "benchmark_code": "    def find_e_directed(self) -> int:\n        # Try both existing and potentially missing edges\n        half = int(len(self.tasks.edges_to_query) / 2)\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for e in self.tasks.edges_to_query[:half]:\n            match = self.g.edge_directed(e.first, e.second)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        t0 = time()\n        for e in self.tasks.edges_to_query[half:]:\n            match = self.g.edge_directed(e.second, e.first)\n            cnt += 1\n            cnt_found += 0 if (match is None) else 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} directed matches')\n        return cnt\n",
        "date": "2020/47/31-06:08:25",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874445.765104,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 2,
        "packets_sent_per_second": 3.704896442223395,
        "packets_recv": 1,
        "packets_recv_per_second": 1.8524482211116975,
        "read_bytes": 50511872,
        "read_bytes_per_second": 93570627.43142176,
        "write_bytes": 0,
        "write_bytes_per_second": 0.0,
        "read_requests": 885,
        "read_requests_per_second": 1639.4166756838524,
        "write_requests": 0,
        "write_requests_per_second": 0.0
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Reads: Find Ingoing Edges",
        "time_elapsed": 0.9715108871459961,
        "count_iterations": 1,
        "count_operations": 19447,
        "msecs_per_operation": 0.04995685129562381,
        "operations_per_second": 20017.27438910065,
        "benchmark_code": "    def find_es_to(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.g.edges_to(v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/47/31-06:08:27",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874447.136972,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 2048,
        "bytes_sent_per_second": 2108.0566642092936,
        "bytes_recv": 2048,
        "bytes_recv_per_second": 2108.0566642092936,
        "packets_sent": 13,
        "packets_sent_per_second": 13.381219059922273,
        "packets_recv": 13,
        "packets_recv_per_second": 13.381219059922273,
        "read_bytes": 29450240,
        "read_bytes_per_second": 30313854.83132964,
        "write_bytes": 2510848,
        "write_bytes_per_second": 2584477.470320594,
        "read_requests": 1390,
        "read_requests_per_second": 1430.7611148686124,
        "write_requests": 29,
        "write_requests_per_second": 29.85041174905738
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Reads: Find Connected Edges",
        "time_elapsed": 1.1755239963531494,
        "count_iterations": 1,
        "count_operations": 19447,
        "msecs_per_operation": 0.060447575273983103,
        "operations_per_second": 16543.26075888778,
        "benchmark_code": "    def find_es_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            es = self.g.edges_related(v)\n            cnt += 1\n            cnt_found += len(es)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} edges found')\n        return cnt\n",
        "date": "2020/47/31-06:08:28",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874448.313929,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 3072,
        "bytes_sent_per_second": 2613.3026714302086,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 5,
        "packets_sent_per_second": 4.253422316780938,
        "packets_recv": 6,
        "packets_recv_per_second": 5.104106780137126,
        "read_bytes": 28811264,
        "read_bytes_per_second": 24509294.65445345,
        "write_bytes": 116805632,
        "write_bytes_per_second": 99364736.37490034,
        "read_requests": 1244,
        "read_requests_per_second": 1058.2514724150974,
        "write_requests": 721,
        "write_requests_per_second": 613.3434980798113
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Reads: Find Friends",
        "time_elapsed": 0.914788007736206,
        "count_iterations": 1,
        "count_operations": 19447,
        "msecs_per_operation": 0.04704005799024045,
        "operations_per_second": 21258.47719421335,
        "benchmark_code": "    def find_vs_related(self) -> int:\n        cnt = 0\n        cnt_found = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            vs = self.g.neighbors(v)\n            cnt += 1\n            cnt_found += len(vs)\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        print(f'---- {cnt} ops: {cnt_found} related nodes')\n        return cnt\n",
        "date": "2020/47/31-06:08:29",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874449.230049,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 1024,
        "bytes_recv_per_second": 1119.3850283783859,
        "packets_sent": 1,
        "packets_sent_per_second": 1.0931494417757674,
        "packets_recv": 1,
        "packets_recv_per_second": 1.0931494417757674,
        "read_bytes": 31649792,
        "read_bytes_per_second": 34597952.457119144,
        "write_bytes": 7634944,
        "write_bytes_per_second": 8346134.771589245,
        "read_requests": 728,
        "read_requests_per_second": 795.8127936127586,
        "write_requests": 59,
        "write_requests_per_second": 64.49581706477028
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Reads: Count Friends",
        "time_elapsed": 1.0963671207427979,
        "count_iterations": 1,
        "count_operations": 19447,
        "msecs_per_operation": 0.0563771852081451,
        "operations_per_second": 17737.67165402087,
        "benchmark_code": "    def count_v_related(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.g.number_of_neighbors(v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/47/31-06:08:30",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874450.327823,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 2,
        "packets_sent_per_second": 1.824206474419794,
        "packets_recv": 2,
        "packets_recv_per_second": 1.824206474419794,
        "read_bytes": 32313344,
        "read_bytes_per_second": 29473105.667477004,
        "write_bytes": 11767808,
        "write_bytes_per_second": 10733455.771664524,
        "read_requests": 578,
        "read_requests_per_second": 527.1956711073205,
        "write_requests": 90,
        "write_requests_per_second": 82.08929134889074
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Reads: Count Followers",
        "time_elapsed": 0.9173989295959473,
        "count_iterations": 1,
        "count_operations": 19447,
        "msecs_per_operation": 0.04717431632621727,
        "operations_per_second": 21197.97546370051,
        "benchmark_code": "    def count_v_followers(self) -> int:\n        cnt = 0\n        t0 = time()\n        for v in self.tasks.nodes_to_query:\n            self.g.number_of_predecessors(v)\n            cnt += 1\n            dt = time() - t0\n            if dt > self.max_seconds_per_query:\n                break\n        return cnt\n",
        "date": "2020/47/31-06:08:31",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874451.246484,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 1,
        "packets_sent_per_second": 1.0900383330951051,
        "packets_recv": 1,
        "packets_recv_per_second": 1.0900383330951051,
        "read_bytes": 20623360,
        "read_bytes_per_second": 22480252.957220268,
        "write_bytes": 8392704,
        "write_bytes_per_second": 9148369.07832062,
        "read_requests": 1006,
        "read_requests_per_second": 1096.5785630936757,
        "write_requests": 65,
        "write_requests_per_second": 70.85249165118182
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Writes: Remove Edge",
        "time_elapsed": 1.818079948425293,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.1818079948425293,
        "operations_per_second": 5500.308173279934,
        "benchmark_code": "    def remove_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.g.remove(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/47/31-06:08:33",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874453.065957,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 1024,
        "bytes_sent_per_second": 563.2315569438653,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 3,
        "packets_sent_per_second": 1.6500924519839801,
        "packets_recv": 3,
        "packets_recv_per_second": 1.6500924519839801,
        "read_bytes": 434176,
        "read_bytes_per_second": 238810.18014419888,
        "write_bytes": 59498496,
        "write_bytes_per_second": 32726006.384666346,
        "read_requests": 35,
        "read_requests_per_second": 19.25107860647977,
        "write_requests": 10048,
        "write_requests_per_second": 5526.709652511678
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Writes: Upsert Edge",
        "time_elapsed": 1.789125919342041,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.1789125919342041,
        "operations_per_second": 5589.3215183409475,
        "benchmark_code": "    def upsert_e(self) -> int:\n        cnt = 0\n        for e in self.tasks.edges_to_change_by_one:\n            self.g.add(e)\n            cnt += 1\n        return cnt\n",
        "date": "2020/47/31-06:08:34",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874454.856302,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 13312,
        "bytes_sent_per_second": 7440.504805215469,
        "bytes_recv": 12288,
        "bytes_recv_per_second": 6868.158281737356,
        "packets_sent": 128,
        "packets_sent_per_second": 71.54331543476412,
        "packets_recv": 27,
        "packets_recv_per_second": 15.091168099520559,
        "read_bytes": 8204288,
        "read_bytes_per_second": 4585640.346106641,
        "write_bytes": 59826176,
        "write_bytes_per_second": 33438773.287685275,
        "read_requests": 136,
        "read_requests_per_second": 76.01477264943688,
        "write_requests": 10037,
        "write_requests_per_second": 5610.0020079588085
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Writes: Remove Edges Batch",
        "time_elapsed": 0.5241198539733887,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.052411985397338864,
        "operations_per_second": 19079.605407406936,
        "benchmark_code": "    def remove_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.g.remove(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/47/31-06:08:35",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874455.381589,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 13312,
        "bytes_sent_per_second": 25398.770718340114,
        "bytes_recv": 6144,
        "bytes_recv_per_second": 11722.509562310821,
        "packets_sent": 13,
        "packets_sent_per_second": 24.803487029629018,
        "packets_recv": 14,
        "packets_recv_per_second": 26.71144757036971,
        "read_bytes": 5541888,
        "read_bytes_per_second": 10573703.62520436,
        "write_bytes": 21065728,
        "write_bytes_per_second": 40192577.78597637,
        "read_requests": 217,
        "read_requests_per_second": 414.0274373407305,
        "write_requests": 174,
        "write_requests_per_second": 331.98513408888067
    },
    {
        "database": "Unum.GraphDB",
        "dataset": "HumanBrain",
        "benchmark_name": "Random Writes: Upsert Edges Batch",
        "time_elapsed": 0.5532279014587402,
        "count_iterations": 1,
        "count_operations": 10000,
        "msecs_per_operation": 0.055322790145874025,
        "operations_per_second": 18075.733298396917,
        "benchmark_code": "    def upsert_es(self) -> int:\n        cnt = 0\n        for es in self.tasks.edges_to_change_batched:\n            self.g.add(es)\n            cnt += len(es)\n        return cnt\n",
        "date": "2020/47/31-06:08:35",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1598874455.935993,
        "date_readable": "Aug 31, 2020",
        "date_sortable": "2020/47/31",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 1024,
        "bytes_recv_per_second": 1850.9550897558445,
        "packets_sent": 3,
        "packets_sent_per_second": 5.422719989519075,
        "packets_recv": 4,
        "packets_recv_per_second": 7.2302933193587675,
        "read_bytes": 4902912,
        "read_bytes_per_second": 8862372.969750984,
        "write_bytes": 31088640,
        "write_bytes_per_second": 56194996.52498744,
        "read_requests": 191,
        "read_requests_per_second": 345.24650599938116,
        "write_requests": 213,
        "write_requests_per_second": 385.01311925585435
    },
    {
        "database": "Sampling in Unum",
        "dataset": "CommunitiesFB",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 0.003698110580444336,
        "count_iterations": 1,
        "count_operations": 52310,
        "msecs_per_operation": 7.069605391788063e-05,
        "operations_per_second": 14145061.068918832,
        "benchmark_code": "            func=lambda: sample(),\n",
        "date": "2020/22/05-17:09:55",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599312175.434412,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/22/05",
        "bytes_sent": 0,
        "bytes_sent_per_second": 0.0,
        "bytes_recv": 0,
        "bytes_recv_per_second": 0.0,
        "packets_sent": 0,
        "packets_sent_per_second": 0.0,
        "packets_recv": 0,
        "packets_recv_per_second": 0.0,
        "read_bytes": 2875392,
        "read_bytes_per_second": 777530021.7373477,
        "write_bytes": 5492736,
        "write_bytes_per_second": 1485281708.1905744,
        "read_requests": 11,
        "read_requests_per_second": 2974.491908967829,
        "write_requests": 21,
        "write_requests_per_second": 5678.575462574947
    },
    {
        "database": "Sampling in Unum",
        "dataset": "MovieRatings",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 0.729860782623291,
        "count_iterations": 1,
        "count_operations": 2811716,
        "msecs_per_operation": 0.00025957841496911175,
        "operations_per_second": 3852400.439840092,
        "benchmark_code": "            func=lambda: sample(),\n",
        "date": "2020/23/05-17:09:06",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599312186.233436,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/23/05",
        "bytes_sent": 1024,
        "bytes_sent_per_second": 1403.0072917735126,
        "bytes_recv": 1024,
        "bytes_recv_per_second": 1403.0072917735126,
        "packets_sent": 2,
        "packets_sent_per_second": 2.740248616745142,
        "packets_recv": 4,
        "packets_recv_per_second": 5.480497233490284,
        "read_bytes": 12476416,
        "read_bytes_per_second": 17094240.84296848,
        "write_bytes": 0,
        "write_bytes_per_second": 0.0,
        "read_requests": 75,
        "read_requests_per_second": 102.75932312794282,
        "write_requests": 0,
        "write_requests_per_second": 0.0
    },
    {
        "database": "Sampling in Unum",
        "dataset": "PatentCitations",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 4.10331916809082,
        "count_iterations": 1,
        "count_operations": 16518947,
        "msecs_per_operation": 0.00024840077082944934,
        "operations_per_second": 4025752.4027032694,
        "benchmark_code": "            func=lambda: sample(),\n",
        "date": "2020/16/05-19:09:15",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318975.887668,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/16/05",
        "bytes_sent": 7168,
        "bytes_sent_per_second": 1746.8784918661604,
        "bytes_recv": 5120,
        "bytes_recv_per_second": 1247.7703513329716,
        "packets_sent": 16,
        "packets_sent_per_second": 3.8992823479155367,
        "packets_recv": 21,
        "packets_recv_per_second": 5.117808081639142,
        "read_bytes": 396365824,
        "read_bytes_per_second": 96596391.30251227,
        "write_bytes": 180228096,
        "write_bytes_per_second": 43922514.58320167,
        "read_requests": 1012,
        "read_requests_per_second": 246.6296085056577,
        "write_requests": 731,
        "write_requests_per_second": 178.14846227039106
    },
    {
        "database": "Sampling in Unum",
        "dataset": "MouseGenes",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 3.688451051712036,
        "count_iterations": 1,
        "count_operations": 14506199,
        "msecs_per_operation": 0.0002542672309756702,
        "operations_per_second": 3932870.138880326,
        "benchmark_code": "            func=lambda: sample(),\n",
        "date": "2020/16/05-19:09:19",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599318979.579982,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/16/05",
        "bytes_sent": 8192,
        "bytes_sent_per_second": 2220.9865022331232,
        "bytes_recv": 11264,
        "bytes_recv_per_second": 3053.8564405705447,
        "packets_sent": 27,
        "packets_sent_per_second": 7.320145942418741,
        "packets_recv": 22,
        "packets_recv_per_second": 5.964563360489345,
        "read_bytes": 367325184,
        "read_bytes_per_second": 99587924.26688214,
        "write_bytes": 245760,
        "write_bytes_per_second": 66629.5950669937,
        "read_requests": 809,
        "read_requests_per_second": 219.33326175617637,
        "write_requests": 25,
        "write_requests_per_second": 6.777912909646982
    },
    {
        "database": "Sampling in Unum",
        "dataset": "HumanBrain",
        "benchmark_name": "Sequential Writes: Import CSV",
        "time_elapsed": 25.301257848739624,
        "count_iterations": 1,
        "count_operations": 87273967,
        "msecs_per_operation": 0.0002899061280065294,
        "operations_per_second": 3449392.4184226883,
        "benchmark_code": "            func=lambda: sample(),\n",
        "date": "2020/16/05-19:09:44",
        "num_cpus": 16,
        "mhz_per_cpu": 2300,
        "build_type": "debug",
        "cpu_scaling_enabled": false,
        "device_name": "MacbookPro",
        "date_utc": 1599319004.882356,
        "date_readable": "Sep 05, 2020",
        "date_sortable": "2020/16/05",
        "bytes_sent": 39936,
        "bytes_sent_per_second": 1578.4195488916928,
        "bytes_recv": 31744,
        "bytes_recv_per_second": 1254.6411798882687,
        "packets_sent": 118,
        "packets_sent_per_second": 4.66379974882862,
        "packets_recv": 135,
        "packets_recv_per_second": 5.3357031024734205,
        "read_bytes": 4357087232,
        "read_bytes_per_second": 172208324.90022022,
        "write_bytes": 26128384,
        "write_bytes_per_second": 1032691.1079364214,
        "read_requests": 9839,
        "read_requests_per_second": 388.87394685359993,
        "write_requests": 506,
        "write_requests_per_second": 19.99900570260408
    }
]