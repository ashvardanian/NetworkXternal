version: '3.5'
services:
  
  # --------------------------
  # Separate application for every dataset:
  # --------------------------

  # http://networkrepository.com/fb-pages-company.php
  graphdb-task-communities:
    container_name: graphdb-task-communities
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/communities/:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/communities/:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-communities/fb-pages-company.edges'
      COUNT_NODES: '14092'
      COUNT_EDGES: '52309'
      SAMPLE_FROM_REAL_DATA: '1'
      
  # http://networkrepository.com/orkut.php
  graphdb-task-orkut:
    container_name: graphdb-task-orkut
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/orkut/:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/orkut/:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-friendster/orkut.edges'
      COUNT_NODES: '2783196'
      COUNT_EDGES: '444222386'

  # http://networkrepository.com/soc-sinaweibo.php
  graphdb-task-sinaweibo:
    container_name: graphdb-task-sinaweibo
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/sinaweibo:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/sinaweibo:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-sinaweibo/soc-sinaweibo.mtx'
      COUNT_NODES: '58655849'
      COUNT_EDGES: '261321071'

  # http://networkrepository.com/soc-twitter.php
  graphdb-task-twitter:
    container_name: graphdb-task-twitter
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/twitter:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/twitter:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-twitter/soc-twitter-konect.edges'
      COUNT_NODES: '16751863'
      COUNT_EDGES: '1468365182'

  # http://networkrepository.com/soc-friendster.php
  graphdb-task-friendster:
    container_name: graphdb-task-friendster
    image: 'unum/pycler/graphdb:latest'
    volumes:
      - '~/benchmarks/rocksdb/friendster:/var/lib/rocksdb'
      - '~/benchmarks/sqlite/friendster:/var/lib/sqlite'
    environment: 
      URI_FILE: '/Users/av/Datasets/graph-friendster/soc-friendster.mtx'
      COUNT_NODES: '65608366'
      COUNT_EDGES: '1806067135'

  # --------------------------
  # The infrastructure required for all of that to work:
  # --------------------------

  # https://hub.docker.com/_/mongo
  graphdb-store-mongo:
    container_name: graphdb-store-mongo
    image: 'mongo'
    volumes:
      - '~/benchmarks/mongo:/data/db'
    ports:
      - '27017:27017'
    environment: 
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'temptemp'

  graphdb-store-postgres:
    container_name: graphdb-store-postgres
    image: 'postgres'
    volumes:
      - '~/benchmarks/postgres:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    environment: 
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'temptemp'

  # https://hub.docker.com/_/mysql
  graphdb-store-mysql:
    container_name: graphdb-store-mysql
    image: 'mysql'
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - '~/benchmarks/mysql:/var/lib/mysql'
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: 'temptemp'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'temptemp'

  # https://hub.docker.com/_/arangodb
  graphdb-store-arangodb:
    container_name: graphdb-store-arangodb
    image: 'arangodb'
    volumes:
      - '~/benchmarks/arangodb:/var/lib/arangodb3'
    ports:
      - '8529:8529'
    environment:
      ARANGO_STORAGE_ENGINE: 'mmfiles' # 'rocksdb'
      ARANGO_ROOT_PASSWORD: 'temptemp'

  graphdb-store-neo4j:
    container_name: graphdb-store-neo4j
    image: 'neo4j'
    volumes:
      - '~/benchmarks/neo4j:/data'
    ports:
      - '7474:7474' # http
      - '7687:7687' # bolt
    environment:
      NEO4J_AUTH: 'none'
